import{_ as p,C as h,c as r,o as k,j as i,a as e,a2 as n,G as t,w as l}from"./chunks/framework.CHmd-7HT.js";const P=JSON.parse('{"title":"Core Reactant API","description":"","frontmatter":{},"headers":[],"relativePath":"api/api.md","filePath":"api/api.md","lastUpdated":null}'),o={name:"api/api.md"},d={class:"jldocstring custom-block"},c={class:"jldocstring custom-block"},g={class:"jldocstring custom-block"},y={class:"jldocstring custom-block"},E={class:"jldocstring custom-block"},u={class:"jldocstring custom-block"},C={class:"jldocstring custom-block"},F={class:"jldocstring custom-block"},f={class:"jldocstring custom-block"},b={class:"jldocstring custom-block"},m={class:"jldocstring custom-block"},A={class:"jldocstring custom-block"},_={class:"jldocstring custom-block"};function v(D,s,j,R,T,x){const a=h("Badge");return k(),r("div",null,[s[52]||(s[52]=i("h1",{id:"Core-Reactant-API",tabindex:"-1"},[e("Core Reactant API "),i("a",{class:"header-anchor",href:"#Core-Reactant-API","aria-label":'Permalink to "Core Reactant API {#Core-Reactant-API}"'},"​")],-1)),s[53]||(s[53]=i("h2",{id:"Compile-API",tabindex:"-1"},[e("Compile API "),i("a",{class:"header-anchor",href:"#Compile-API","aria-label":'Permalink to "Compile API {#Compile-API}"'},"​")],-1)),i("details",d,[i("summary",null,[s[0]||(s[0]=i("a",{id:"Reactant.Compiler.@compile",href:"#Reactant.Compiler.@compile"},[i("span",{class:"jlbinding"},"Reactant.Compiler.@compile")],-1)),s[1]||(s[1]=e()),t(a,{type:"info",class:"jlObjectType jlMacro",text:"Macro"})]),s[3]||(s[3]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@compile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [optimize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] [no_nan </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] [sync </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>',1)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[2]||(s[2]=[i("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/13dc7a41f819f26358c64ee5e6f17d7be57713f5/src/Compiler.jl#L1317-L1319",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",c,[i("summary",null,[s[4]||(s[4]=i("a",{id:"Reactant.Compiler.@jit",href:"#Reactant.Compiler.@jit"},[i("span",{class:"jlbinding"},"Reactant.Compiler.@jit")],-1)),s[5]||(s[5]=e()),t(a,{type:"info",class:"jlObjectType jlMacro",text:"Macro"})]),s[7]||(s[7]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@jit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [optimize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] [no_nan </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] [sync </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Run @compile f(args..) then immediately execute it</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[6]||(s[6]=[i("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/13dc7a41f819f26358c64ee5e6f17d7be57713f5/src/Compiler.jl#L1332-L1336",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[54]||(s[54]=i("h2",{id:"ReactantCore-API",tabindex:"-1"},[e("ReactantCore API "),i("a",{class:"header-anchor",href:"#ReactantCore-API","aria-label":'Permalink to "ReactantCore API {#ReactantCore-API}"'},"​")],-1)),i("details",g,[i("summary",null,[s[8]||(s[8]=i("a",{id:"ReactantCore.within_compile",href:"#ReactantCore.within_compile"},[i("span",{class:"jlbinding"},"ReactantCore.within_compile")],-1)),s[9]||(s[9]=e()),t(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[11]||(s[11]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">within_compile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Returns true if this function is executed in a Reactant compilation context, otherwise false.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[10]||(s[10]=[i("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/13dc7a41f819f26358c64ee5e6f17d7be57713f5/lib/ReactantCore/src/ReactantCore.jl#L35-L39",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",y,[i("summary",null,[s[12]||(s[12]=i("a",{id:"ReactantCore.@trace",href:"#ReactantCore.@trace"},[i("span",{class:"jlbinding"},"ReactantCore.@trace")],-1)),s[13]||(s[13]=e()),t(a,{type:"info",class:"jlObjectType jlMacro",text:"Macro"})]),s[15]||(s[15]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@trace</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">expr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>Converts certain expressions like control flow into a Reactant friendly form. Importantly, if no traced value is found inside the expression, then there is no overhead.</p><p><strong>Currently Supported</strong></p><ul><li><p><code>if</code> conditions (with <code>elseif</code> and other niceties) (<code>@trace if ...</code>)</p></li><li><p><code>if</code> statements with a preceeding assignment (<code>@trace a = if ...</code>) (note the positioning of the macro needs to be before the assignment and not before the <code>if</code>)</p></li><li><p><code>for</code> statements with a single induction variable iterating over a syntactic <code>StepRange</code> of integers.</p></li></ul><p><strong>Special Considerations</strong></p><ul><li>Apply <code>@trace</code> only at the outermost <code>if</code>. Nested <code>if</code> statements will be automatically expanded into the correct form.</li></ul><p><strong>Extended Help</strong></p><p><strong>Caveats (Deviations from Core Julia Semantics)</strong></p><p><strong>New variables introduced</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@trace</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>In the outer scope <code>p</code> is not defined if <code>x ≤ 0</code>. However, for the traced version, it is defined and set to a dummy value.</p><p><strong>Short Circuiting Operations</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@trace</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p><code>&amp;&amp;</code> and <code>||</code> are short circuiting operations. In the traced version, we replace them with <code>&amp;</code> and <code>|</code> respectively.</p><p><strong>Type-Unstable Branches</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@trace</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0f0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>This will not compile since <code>y</code> is a <code>Float32</code> in one branch and a <code>Float64</code> in the other. You need to ensure that all branches have the same type.</p><p>Another example is the following for loop which changes the type of <code>x</code> between iterations.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ...</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # ConcreteRArray{Int64, 1}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1f0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5f0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10f0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ConcreteRArray{Float32, 1}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p><strong>Certain Symbols are Reserved</strong></p><p>Symbols like [😦😃, :nothing, :missing, :Inf, :Inf16, :Inf32, :Inf64, :Base, :Core] are not allowed as variables in <code>@trace</code> expressions. While certain cases might work but these are not guaranteed to work. For example, the following will not work:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    nothing</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    @trace</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    else</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2.0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> y, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div>`,22)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[14]||(s[14]=[i("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/13dc7a41f819f26358c64ee5e6f17d7be57713f5/lib/ReactantCore/src/ReactantCore.jl#L43-L130",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[55]||(s[55]=i("h2",{id:"Inspect-Generated-HLO",tabindex:"-1"},[e("Inspect Generated HLO "),i("a",{class:"header-anchor",href:"#Inspect-Generated-HLO","aria-label":'Permalink to "Inspect Generated HLO {#Inspect-Generated-HLO}"'},"​")],-1)),i("details",E,[i("summary",null,[s[16]||(s[16]=i("a",{id:"Reactant.Compiler.@code_hlo",href:"#Reactant.Compiler.@code_hlo"},[i("span",{class:"jlbinding"},"Reactant.Compiler.@code_hlo")],-1)),s[17]||(s[17]=e()),t(a,{type:"info",class:"jlObjectType jlMacro",text:"Macro"})]),s[19]||(s[19]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@code_hlo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [optimize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] [no_nan </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>See also <a href="/Reactant.jl/v0.2.58/api/api#Reactant.Compiler.@code_xla"><code>@code_xla</code></a>, <a href="/Reactant.jl/v0.2.58/api/api#Reactant.Compiler.@code_mhlo"><code>@code_mhlo</code></a>.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[18]||(s[18]=[i("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/13dc7a41f819f26358c64ee5e6f17d7be57713f5/src/Compiler.jl#L1233-L1237",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",u,[i("summary",null,[s[20]||(s[20]=i("a",{id:"Reactant.Compiler.@code_mhlo",href:"#Reactant.Compiler.@code_mhlo"},[i("span",{class:"jlbinding"},"Reactant.Compiler.@code_mhlo")],-1)),s[21]||(s[21]=e()),t(a,{type:"info",class:"jlObjectType jlMacro",text:"Macro"})]),s[23]||(s[23]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@code_mhlo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [optimize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] [no_nan </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Similar to <code>@code_hlo</code>, but prints the module after running the XLA compiler.</p><p>See also <a href="/Reactant.jl/v0.2.58/api/api#Reactant.Compiler.@code_xla"><code>@code_xla</code></a>, <a href="/Reactant.jl/v0.2.58/api/api#Reactant.Compiler.@code_hlo"><code>@code_hlo</code></a>.</p>',3)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[22]||(s[22]=[i("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/13dc7a41f819f26358c64ee5e6f17d7be57713f5/src/Compiler.jl#L1259-L1265",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",C,[i("summary",null,[s[24]||(s[24]=i("a",{id:"Reactant.Compiler.@code_xla",href:"#Reactant.Compiler.@code_xla"},[i("span",{class:"jlbinding"},"Reactant.Compiler.@code_xla")],-1)),s[25]||(s[25]=e()),t(a,{type:"info",class:"jlObjectType jlMacro",text:"Macro"})]),s[27]||(s[27]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@code_xla</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [optimize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] [no_nan </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Similar to <code>@code_hlo</code>, but prints the HLO module.</p><p>See also <a href="/Reactant.jl/v0.2.58/api/api#Reactant.Compiler.@code_mhlo"><code>@code_mhlo</code></a>, <a href="/Reactant.jl/v0.2.58/api/api#Reactant.Compiler.@code_hlo"><code>@code_hlo</code></a>.</p>',3)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[26]||(s[26]=[i("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/13dc7a41f819f26358c64ee5e6f17d7be57713f5/src/Compiler.jl#L1287-L1293",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[56]||(s[56]=i("h2",{id:"Profile-XLA",tabindex:"-1"},[e("Profile XLA "),i("a",{class:"header-anchor",href:"#Profile-XLA","aria-label":'Permalink to "Profile XLA {#Profile-XLA}"'},"​")],-1)),s[57]||(s[57]=i("p",null,[e("Reactant can hook into XLA's profiler to generate compilation and execution traces. See the "),i("a",{href:"/Reactant.jl/v0.2.58/tutorials/profiling#profiling"},"profiling tutorial"),e(" for more details.")],-1)),i("details",F,[i("summary",null,[s[28]||(s[28]=i("a",{id:"Reactant.Profiler.with_profiler",href:"#Reactant.Profiler.with_profiler"},[i("span",{class:"jlbinding"},"Reactant.Profiler.with_profiler")],-1)),s[29]||(s[29]=e()),t(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[31]||(s[31]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">with_profiler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, trace_output_dir</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; trace_device</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, trace_host</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, create_perfetto_link</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Runs the provided function under a profiler for XLA (similar to <a href="https://jax.readthedocs.io/en/latest/profiling.html" target="_blank" rel="noreferrer">JAX&#39;s profiler</a>). The traces will be exported in the provided folder and can be seen using tools like <a href="https://ui.perfetto.dev" target="_blank" rel="noreferrer">perfetto.dev</a>. It will return the return values from the function. The <code>create_perfetto_link</code> parameter can be used to automatically generate a perfetto url to visualize the trace.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">compiled_func </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> with_profiler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./traces&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    @compile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sync</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> myfunc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, z)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">with_profiler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./traces/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    compiled_func</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, y, z)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">Note</p><p>When profiling compiled functions make sure to <a href="./@ref"><code>@compile</code></a> with the <code>sync=true</code> option so that the compiled execution is captured by the profiler.</p></div>`,4)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[30]||(s[30]=[i("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/13dc7a41f819f26358c64ee5e6f17d7be57713f5/src/Profiler.jl#L6-L28",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",f,[i("summary",null,[s[32]||(s[32]=i("a",{id:"Reactant.Profiler.annotate",href:"#Reactant.Profiler.annotate"},[i("span",{class:"jlbinding"},"Reactant.Profiler.annotate")],-1)),s[33]||(s[33]=e()),t(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[35]||(s[35]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">annotate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, name, [level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TRACE_ME_LEVEL_CRITICAL])</span></span></code></pre></div><p>Generate an annotation in the current trace.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[34]||(s[34]=[i("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/13dc7a41f819f26358c64ee5e6f17d7be57713f5/src/Profiler.jl#L70-L74",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",b,[i("summary",null,[s[36]||(s[36]=i("a",{id:"Reactant.Profiler.@annotate",href:"#Reactant.Profiler.@annotate"},[i("span",{class:"jlbinding"},"Reactant.Profiler.@annotate")],-1)),s[37]||(s[37]=e()),t(a,{type:"info",class:"jlObjectType jlMacro",text:"Macro"})]),s[39]||(s[39]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@annotate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [name] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> foo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a, b, c)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>The created function will generate an annotation in the captured XLA profiles.</p>`,2)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[38]||(s[38]=[i("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/13dc7a41f819f26358c64ee5e6f17d7be57713f5/src/Profiler.jl#L86-L92",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[58]||(s[58]=i("h2",{id:"devices",tabindex:"-1"},[e("Devices "),i("a",{class:"header-anchor",href:"#devices","aria-label":'Permalink to "Devices"'},"​")],-1)),i("details",m,[i("summary",null,[s[40]||(s[40]=i("a",{id:"Reactant.devices",href:"#Reactant.devices"},[i("span",{class:"jlbinding"},"Reactant.devices")],-1)),s[41]||(s[41]=e()),t(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[43]||(s[43]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">devices</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(backend</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">devices</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(backend</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">XLA.AbstractClient</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> XLA</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">default_backend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p>Return a list of devices available for the given client.</p>`,2)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[42]||(s[42]=[i("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/13dc7a41f819f26358c64ee5e6f17d7be57713f5/src/Devices.jl#L1-L6",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",A,[i("summary",null,[s[44]||(s[44]=i("a",{id:"Reactant.addressable_devices",href:"#Reactant.addressable_devices"},[i("span",{class:"jlbinding"},"Reactant.addressable_devices")],-1)),s[45]||(s[45]=e()),t(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[47]||(s[47]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addressable_devices</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(backend</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">addressable_devices</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(backend</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">XLA.AbstractClient</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> XLA</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">default_backend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p>Return a list of addressable devices available for the given client.</p>`,2)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[46]||(s[46]=[i("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/13dc7a41f819f26358c64ee5e6f17d7be57713f5/src/Devices.jl#L11-L16",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[59]||(s[59]=i("h2",{id:"Internal-utils",tabindex:"-1"},[e("Internal utils "),i("a",{class:"header-anchor",href:"#Internal-utils","aria-label":'Permalink to "Internal utils {#Internal-utils}"'},"​")],-1)),i("details",_,[i("summary",null,[s[48]||(s[48]=i("a",{id:"ReactantCore.materialize_traced_array",href:"#ReactantCore.materialize_traced_array"},[i("span",{class:"jlbinding"},"ReactantCore.materialize_traced_array")],-1)),s[49]||(s[49]=e()),t(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[51]||(s[51]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">materialize_traced_array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AbstractArray{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TracedRNumber</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TracedRArray</span></span></code></pre></div><p>Given an AbstractArray{TracedRNumber}, return or create an equivalent TracedRArray.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:l(()=>s[50]||(s[50]=[i("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/13dc7a41f819f26358c64ee5e6f17d7be57713f5/lib/ReactantCore/src/ReactantCore.jl#L532-L537",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})])])}const I=p(o,[["render",v]]);export{P as __pageData,I as default};
