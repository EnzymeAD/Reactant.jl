import{_ as n,C as d,c as r,o as c,j as t,a,a2 as o,G as s,w as i}from"./chunks/framework.CrknHT-Z.js";const v=JSON.parse('{"title":"XLA","description":"","frontmatter":{},"headers":[],"relativePath":"api/xla.md","filePath":"api/xla.md","lastUpdated":null}'),p={name:"api/xla.md"},u={class:"jldocstring custom-block"},b={class:"jldocstring custom-block"},_={class:"jldocstring custom-block"};function f(m,e,k,g,y,A){const l=d("Badge");return c(),r("div",null,[e[14]||(e[14]=t("h1",{id:"xla",tabindex:"-1"},[a("XLA "),t("a",{class:"header-anchor",href:"#xla","aria-label":'Permalink to "XLA"'},"â€‹")],-1)),t("details",u,[t("summary",null,[e[0]||(e[0]=t("a",{id:"Reactant.XLA.AllocatorStats",href:"#Reactant.XLA.AllocatorStats"},[t("span",{class:"jlbinding"},"Reactant.XLA.AllocatorStats")],-1)),e[1]||(e[1]=a()),s(l,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[3]||(e[3]=o('<p>AllocatorStats()</p><p>Contains the following fields:</p><ul><li><p><code>num_allocs</code></p></li><li><p><code>bytes_in_use</code></p></li><li><p><code>peak_bytes_in_use</code></p></li><li><p><code>largest_alloc_size</code></p></li><li><p><code>bytes_limit</code></p></li><li><p><code>bytes_reserved</code></p></li><li><p><code>peak_bytes_reserved</code></p></li><li><p><code>bytes_reservable_limit</code></p></li><li><p><code>largest_free_block_bytes</code></p></li><li><p><code>pool_bytes</code></p></li><li><p><code>peak_pool_bytes</code></p></li></ul><p>It should be constructed using the <a href="/Reactant.jl/v0.2.41/api/xla#Reactant.XLA.allocatorstats"><code>allocatorstats</code></a> function.</p>',4)),s(l,{type:"info",class:"source-link",text:"source"},{default:i(()=>e[2]||(e[2]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/38cf17dd2eb67d50de3ce704b97d3e85c515a4fd/src/xla/Stats.jl#L16-L33",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",b,[t("summary",null,[e[4]||(e[4]=t("a",{id:"Reactant.XLA.allocatorstats",href:"#Reactant.XLA.allocatorstats"},[t("span",{class:"jlbinding"},"Reactant.XLA.allocatorstats")],-1)),e[5]||(e[5]=a()),s(l,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[7]||(e[7]=t("p",null,"allocatorstats([device])",-1)),e[8]||(e[8]=t("p",null,[a("Return an "),t("a",{href:"/Reactant.jl/v0.2.41/api/xla#Reactant.XLA.AllocatorStats"},[t("code",null,"AllocatorStats")]),a(" instance with information about the device specific allocator.")],-1)),e[9]||(e[9]=t("div",{class:"warning custom-block"},[t("p",{class:"custom-block-title"},"Warning"),t("p",null,"This method is currently not implemented for the CPU device.")],-1)),s(l,{type:"info",class:"source-link",text:"source"},{default:i(()=>e[6]||(e[6]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/38cf17dd2eb67d50de3ce704b97d3e85c515a4fd/src/xla/Stats.jl#L48-L55",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",_,[t("summary",null,[e[10]||(e[10]=t("a",{id:"Reactant.XLA.device_ordinal",href:"#Reactant.XLA.device_ordinal"},[t("span",{class:"jlbinding"},"Reactant.XLA.device_ordinal")],-1)),e[11]||(e[11]=a()),s(l,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[13]||(e[13]=o('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">device_ordinal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(device</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Device</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Given the device, return the corresponding global device ordinal in the client.</p>',2)),s(l,{type:"info",class:"source-link",text:"source"},{default:i(()=>e[12]||(e[12]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/38cf17dd2eb67d50de3ce704b97d3e85c515a4fd/src/xla/Device.jl#L15-L19",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})])])}const j=n(p,[["render",f]]);export{v as __pageData,j as default};
