import{_ as s,C as n,c as i,o as r,j as e,a as l,a2 as c,G as o}from"./chunks/framework.C6qGNw6t.js";const j=JSON.parse('{"title":"XLA","description":"","frontmatter":{},"headers":[],"relativePath":"api/xla.md","filePath":"api/xla.md","lastUpdated":null}'),d={name:"api/xla.md"},p={class:"jldocstring custom-block"},u={class:"jldocstring custom-block"};function b(m,t,_,f,A,y){const a=n("Badge");return r(),i("div",null,[t[9]||(t[9]=e("h1",{id:"xla",tabindex:"-1"},[l("XLA "),e("a",{class:"header-anchor",href:"#xla","aria-label":'Permalink to "XLA"'},"â€‹")],-1)),e("details",p,[e("summary",null,[t[0]||(t[0]=e("a",{id:"Reactant.XLA.AllocatorStats",href:"#Reactant.XLA.AllocatorStats"},[e("span",{class:"jlbinding"},"Reactant.XLA.AllocatorStats")],-1)),t[1]||(t[1]=l()),o(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),t[2]||(t[2]=c('<p>AllocatorStats()</p><p>Contains the following fields:</p><ul><li><p><code>num_allocs</code></p></li><li><p><code>bytes_in_use</code></p></li><li><p><code>peak_bytes_in_use</code></p></li><li><p><code>largest_alloc_size</code></p></li><li><p><code>bytes_limit</code></p></li><li><p><code>bytes_reserved</code></p></li><li><p><code>peak_bytes_reserved</code></p></li><li><p><code>bytes_reservable_limit</code></p></li><li><p><code>largest_free_block_bytes</code></p></li><li><p><code>pool_bytes</code></p></li><li><p><code>peak_pool_bytes</code></p></li></ul><p>It should be constructed using the <a href="/Reactant.jl/v0.2.24/api/xla#Reactant.XLA.allocatorstats"><code>allocatorstats</code></a> function.</p><p><a href="https://github.com/EnzymeAD/Reactant.jl/blob/1e6037f35ed5a36d7486873dd6423a81fcc0e834/src/XLA.jl#L322-L339" target="_blank" rel="noreferrer">source</a></p>',5))]),e("details",u,[e("summary",null,[t[3]||(t[3]=e("a",{id:"Reactant.XLA.allocatorstats",href:"#Reactant.XLA.allocatorstats"},[e("span",{class:"jlbinding"},"Reactant.XLA.allocatorstats")],-1)),t[4]||(t[4]=l()),o(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),t[5]||(t[5]=e("p",null,"allocatorstats([device])",-1)),t[6]||(t[6]=e("p",null,[l("Return an "),e("a",{href:"/Reactant.jl/v0.2.24/api/xla#Reactant.XLA.AllocatorStats"},[e("code",null,"AllocatorStats")]),l(" instance with information about the device specific allocator.")],-1)),t[7]||(t[7]=e("div",{class:"warning custom-block"},[e("p",{class:"custom-block-title"},"Warning"),e("p",null,"This method is currently not implemented for the CPU device.")],-1)),t[8]||(t[8]=e("p",null,[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/1e6037f35ed5a36d7486873dd6423a81fcc0e834/src/XLA.jl#L354-L361",target:"_blank",rel:"noreferrer"},"source")],-1))])])}const L=s(d,[["render",b]]);export{j as __pageData,L as default};
