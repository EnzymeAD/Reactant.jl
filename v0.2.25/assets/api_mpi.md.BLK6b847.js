import{_ as s,C as r,c as i,o as p,j as t,a as l,G as n,a2 as o}from"./chunks/framework.Og7vQWlB.js";const P=JSON.parse('{"title":"MPI Dialect","description":"","frontmatter":{},"headers":[],"relativePath":"api/mpi.md","filePath":"api/mpi.md","lastUpdated":null}'),c={name:"api/mpi.md"},d={class:"jldocstring custom-block"},u={class:"jldocstring custom-block"},m={class:"jldocstring custom-block"},R={class:"jldocstring custom-block"},f={class:"jldocstring custom-block"},I={class:"jldocstring custom-block"},M={class:"jldocstring custom-block"};function b(L,e,j,D,T,g){const a=r("Badge");return p(),i("div",null,[e[35]||(e[35]=t("h1",{id:"MPI-Dialect",tabindex:"-1"},[l("MPI Dialect "),t("a",{class:"header-anchor",href:"#MPI-Dialect","aria-label":'Permalink to "MPI Dialect {#MPI-Dialect}"'},"â€‹")],-1)),e[36]||(e[36]=t("p",null,[l("Refer to the "),t("a",{href:"https://mlir.llvm.org/docs/Dialects/MPI/",target:"_blank",rel:"noreferrer"},"official documentation"),l(" for more details.")],-1)),t("details",d,[t("summary",null,[e[0]||(e[0]=t("a",{id:"Reactant.MLIR.Dialects.mpi.comm_rank-Tuple{}",href:"#Reactant.MLIR.Dialects.mpi.comm_rank-Tuple{}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.mpi.comm_rank")],-1)),e[1]||(e[1]=l()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[2]||(e[2]=t("p",null,[t("code",null,"comm_rank")],-1)),e[3]||(e[3]=t("p",null,[l("Communicators other than "),t("code",null,"MPI_COMM_WORLD"),l(" are not supported for now.")],-1)),e[4]||(e[4]=t("p",null,[l("This operation can optionally return an "),t("code",null,"!mpi.retval"),l(" value that can be used to check for errors.")],-1)),e[5]||(e[5]=t("p",null,[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/9339756f1ea494409f8163350c91237db9ff080a/src/mlir/Dialects/MPI.jl#L16-L23",target:"_blank",rel:"noreferrer"},"source")],-1))]),t("details",u,[t("summary",null,[e[6]||(e[6]=t("a",{id:"Reactant.MLIR.Dialects.mpi.error_class-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.mpi.error_class-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.mpi.error_class")],-1)),e[7]||(e[7]=l()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[8]||(e[8]=t("p",null,[t("code",null,"error_class")],-1)),e[9]||(e[9]=t("p",null,[t("code",null,"MPI_Error_class"),l(" maps return values from MPI calls to a set of well-known MPI error classes.")],-1)),e[10]||(e[10]=t("p",null,[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/9339756f1ea494409f8163350c91237db9ff080a/src/mlir/Dialects/MPI.jl#L46-L51",target:"_blank",rel:"noreferrer"},"source")],-1))]),t("details",m,[t("summary",null,[e[11]||(e[11]=t("a",{id:"Reactant.MLIR.Dialects.mpi.finalize-Tuple{}",href:"#Reactant.MLIR.Dialects.mpi.finalize-Tuple{}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.mpi.finalize")],-1)),e[12]||(e[12]=l()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[13]||(e[13]=t("p",null,[t("code",null,"finalize")],-1)),e[14]||(e[14]=t("p",null,"This function cleans up the MPI state. Afterwards, no MPI methods may be invoked (excpet for MPI_Get_version, MPI_Initialized, and MPI_Finalized). Notably, MPI_Init cannot be called again in the same program.",-1)),e[15]||(e[15]=t("p",null,[l("This operation can optionally return an "),t("code",null,"!mpi.retval"),l(" value that can be used to check for errors.")],-1)),e[16]||(e[16]=t("p",null,[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/9339756f1ea494409f8163350c91237db9ff080a/src/mlir/Dialects/MPI.jl#L71-L80",target:"_blank",rel:"noreferrer"},"source")],-1))]),t("details",R,[t("summary",null,[e[17]||(e[17]=t("a",{id:"Reactant.MLIR.Dialects.mpi.init-Tuple{}",href:"#Reactant.MLIR.Dialects.mpi.init-Tuple{}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.mpi.init")],-1)),e[18]||(e[18]=l()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[19]||(e[19]=t("p",null,[t("code",null,"init")],-1)),e[20]||(e[20]=t("p",null,"This operation must preceed most MPI calls (except for very few exceptions, please consult with the MPI specification on these).",-1)),e[21]||(e[21]=t("p",null,"Passing &argc, &argv is not supported currently.",-1)),e[22]||(e[22]=t("p",null,[l("This operation can optionally return an "),t("code",null,"!mpi.retval"),l(" value that can be used to check for errors.")],-1)),e[23]||(e[23]=t("p",null,[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/9339756f1ea494409f8163350c91237db9ff080a/src/mlir/Dialects/MPI.jl#L101-L111",target:"_blank",rel:"noreferrer"},"source")],-1))]),t("details",f,[t("summary",null,[e[24]||(e[24]=t("a",{id:"Reactant.MLIR.Dialects.mpi.recv-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.mpi.recv-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.mpi.recv")],-1)),e[25]||(e[25]=l()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[26]||(e[26]=o('<p><code>recv</code></p><p>MPI_Recv performs a blocking receive of <code>size</code> elements of type <code>dtype</code> from rank <code>dest</code>. The <code>tag</code> value and communicator enables the library to determine the matching of multiple sends and receives between the same ranks.</p><p>Communicators other than <code>MPI_COMM_WORLD</code> are not supprted for now. The MPI_Status is set to <code>MPI_STATUS_IGNORE</code>, as the status object is not yet ported to MLIR.</p><p>This operation can optionally return an <code>!mpi.retval</code> value that can be used to check for errors.</p><p><a href="https://github.com/EnzymeAD/Reactant.jl/blob/9339756f1ea494409f8163350c91237db9ff080a/src/mlir/Dialects/MPI.jl#L132-L146" target="_blank" rel="noreferrer">source</a></p>',5))]),t("details",I,[t("summary",null,[e[27]||(e[27]=t("a",{id:"Reactant.MLIR.Dialects.mpi.retval_check-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.mpi.retval_check-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.mpi.retval_check")],-1)),e[28]||(e[28]=l()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[29]||(e[29]=t("p",null,[t("code",null,"retval_check")],-1)),e[30]||(e[30]=t("p",null,[l("This operation compares MPI status codes to known error class constants such as "),t("code",null,"MPI_SUCCESS"),l(", or "),t("code",null,"MPI_ERR_COMM"),l(".")],-1)),e[31]||(e[31]=t("p",null,[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/9339756f1ea494409f8163350c91237db9ff080a/src/mlir/Dialects/MPI.jl#L173-L178",target:"_blank",rel:"noreferrer"},"source")],-1))]),t("details",M,[t("summary",null,[e[32]||(e[32]=t("a",{id:"Reactant.MLIR.Dialects.mpi.send-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.mpi.send-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.mpi.send")],-1)),e[33]||(e[33]=l()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[34]||(e[34]=o('<p><code>send</code></p><p>MPI_Send performs a blocking send of <code>size</code> elements of type <code>dtype</code> to rank <code>dest</code>. The <code>tag</code> value and communicator enables the library to determine the matching of multiple sends and receives between the same ranks.</p><p>Communicators other than <code>MPI_COMM_WORLD</code> are not supprted for now.</p><p>This operation can optionally return an <code>!mpi.retval</code> value that can be used to check for errors.</p><p><a href="https://github.com/EnzymeAD/Reactant.jl/blob/9339756f1ea494409f8163350c91237db9ff080a/src/mlir/Dialects/MPI.jl#L198-L209" target="_blank" rel="noreferrer">source</a></p>',5))])])}const k=s(c,[["render",b]]);export{P as __pageData,k as default};
