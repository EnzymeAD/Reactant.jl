name: CI with local libReactant

on:
  pull_request:
    paths:
      - '.github/workflows/CI-localjll.yml'
      - 'deps/**'
      - 'ext/**'
      - 'lib/**'
      - 'src/**'
      - 'test/**'
      - 'Project.toml'
  push:
    branches:
      - main
      - release-*
    tags: '*'
    paths:
      - '.github/workflows/CI-localjll.yml'
      - 'deps/**'
      - 'ext/**'
      - 'lib/**'
      - 'src/**'
      - 'test/**'
      - 'Project.toml'

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  test:
    timeout-minutes: 3600
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - local libReactant - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.10'
          - '1.11'
        os:
          - ubuntu-24.04
          - macOS-latest
        exclude:
          - os: macOS-latest
            version: '1.10'
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
      - uses: julia-actions/cache@v2
      - uses: bazel-contrib/setup-bazel@0.13.0
        name: Set up Bazel
        with:
          # Avoid downloading Bazel every time.
          bazelisk-cache: true
          # Store build cache per workflow.
          disk-cache: ${{ github.workflow }}-${{ matrix.os }}-${{ matrix.version }}
          # Share repository cache between workflows.
          repository-cache: true
          bazelisk-version: 1.x
      - name: Build libReactant
        if: ${{ !startsWith(matrix.os, 'macOS-') }}
        id: build_libreactant
        run: |
          python -m pip install numpy
          julia --color=yes --project=deps -e 'using Pkg; Pkg.instantiate()'
          julia --color=yes --project=deps deps/build_local.jl
          cp LocalPreferences.toml test/
      - name: Build libReactant MacOS
        if: ${{ !startsWith(matrix.os, 'macOS-') }}
        id: build_libreactant_mac
        run: |
          python -m pip install numpy
          julia --color=yes --project=deps -e 'using Pkg; Pkg.instantiate()'
          SDKROOT=`xcrun --show-sdk-path` julia --color=yes --project=deps deps/build_local.jl
          cp LocalPreferences.toml test/
      - name: "Install Dependencies"
        run: |
          import Pkg
          Pkg.Registry.update()
          # Install packages present in subdirectories
          dev_pks = Pkg.PackageSpec[]
          for path in ("lib/ReactantCore",)
              push!(dev_pks, Pkg.PackageSpec(; path))
          end
          Pkg.develop(dev_pks)
        shell: julia --color=yes --code-coverage=user --depwarn=yes --project=. {0}
        # Only in Julia v1.10 we need to install `ReactantCore` manually.
        if: ${{ matrix.version == '1.10' }}
        env:
          JULIA_PKG_SERVER_REGISTRY_PREFERENCE: eager
      - name: "Run Tests"
        run: |
          import Pkg
          Pkg.Registry.update()
          Pkg.test(; coverage="user")
        shell: julia --color=yes --code-coverage=user --depwarn=yes --project=. {0}
        id: run_tests
        env:
          JULIA_PKG_SERVER_REGISTRY_PREFERENCE: eager
          REACTANT_TEST_GROUP: ${{ matrix.test_group }}
          XLA_FLAGS: "--xla_force_host_platform_device_count=8"
      - uses: julia-actions/julia-processcoverage@v1
        if: steps.run_tests.outcome == 'success'
      - uses: codecov/codecov-action@v5
        if: steps.run_tests.outcome == 'success'
        with:
          files: lcov.info
