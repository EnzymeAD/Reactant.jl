name: CI

on:
  pull_request:
    paths:
      - '.github/workflows/CI.yml'
      - 'deps/**'
      - 'ext/**'
      - 'lib/**'
      - 'src/**'
      - 'test/**'
      - 'Project.toml'
  push:
    branches:
      - main
      - release-*
      - mg/*
    tags: '*'
    paths:
      - '.github/workflows/CI.yml'
      - 'deps/**'
      - 'ext/**'
      - 'lib/**'
      - 'src/**'
      - 'test/**'
      - 'Project.toml'

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.test_group }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ matrix.libReactant }} libReactant - assertions=${{ matrix.assertions }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          # - '1.10'
          - '1.11'
          # - 'nightly'
        os:
          # - ubuntu-20.04
          - ubuntu-24.04-arm
          # - macOS-latest
        test_group:
          # - core
          # - neural_networks
          - integration
        arch:
          # - x64
          - aarch64
        assertions:
          - false
        libReactant: [packaged]
        # include:
        #   - os: ubuntu-20.04
        #     arch: x64
        #     libReactant: packaged
        #     version: '1.10'
        #     assertions: true
        #     test_group: core
        #   - os: ubuntu-20.04
        #     arch: x64
        #     libReactant: packaged
        #     version: '1.10'
        #     assertions: true
        #     test_group: neural_networks
        #   - os: ubuntu-20.04
        #     arch: x64
        #     libReactant: packaged
        #     version: '1.10'
        #     assertions: true
        #     test_group: integration
          # - os: ubuntu-20.04
          #   arch: x86
          #   libReactant: packaged
          #   version: '1.10'
          #   test_group: core
          # - os: ubuntu-20.04
          #   arch: x86
          #   libReactant: packaged
          #   version: '1.10'
          #   test_group: neural_networks
          # - os: ubuntu-20.04
          #   arch: x86
          #   libReactant: packaged
          #   version: '1.10'
          #   test_group: integration
        exclude:
          - os: ubuntu-20.04 # this is x86_64, exclude foreign architecture
            arch: aarch64
          - os: ubuntu-24.04-arm # this is aarch64, exclude foreign architecture
            arch: x64
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        if: ${{ ! matrix.assertions }}
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v2
      - uses: actions/checkout@v4
        if: ${{ matrix.assertions }}
        with:
          repository: 'JuliaLang/julia'
          ref: release-${{ matrix.version }}
          path: 'julia'
      - name: Compile Julia
        if: ${{ matrix.assertions }}
        run: |
          sed -i.bak 's/exit 2/exit 0/g' julia/deps/tools/jlchecksum
          make -C julia -j $(nproc) FORCE_ASSERTIONS=1 LLVM_ASSERTIONS=1 JULIA_PRECOMPILE=0
          echo $PWD/julia/usr/bin >> $GITHUB_PATH
      - name: Build libReactant
        if: ${{ matrix.libReactant == 'local' && matrix.os != 'macOS-latest'}}
        id: build_libreactant
        run: |
          python -m pip install numpy
          julia --color=yes --project=deps -e 'using Pkg; Pkg.instantiate()'
          julia --color=yes --project=deps deps/build_local.jl
          cp LocalPreferences.toml test/
      - name: Build libReactant MacOS
        if: ${{ matrix.libReactant == 'local' && matrix.os == 'macOS-latest'}}
        id: build_libreactant_mac
        run: |
          python -m pip install numpy
          julia --color=yes --project=deps -e 'using Pkg; Pkg.instantiate()'
          SDKROOT=`xcrun --show-sdk-path` julia --color=yes --project=deps deps/build_local.jl
          cp LocalPreferences.toml test/
      - name: Install dependencies
        run: |
          julia --color=yes --project=test -e 'using Pkg; Pkg.add(; url="https://github.com/giordano/Reactant_jll.jl", rev="b6c6f5eb6e9fd40b58f6dea9ee3490f9da8893df"); Pkg.instantiate()'
        env:
          JULIA_PKG_SERVER_REGISTRY_PREFERENCE: eager
      - name: Run the test but allow failure
        run: |
          julia --color=yes --project=test test/runtests.jl
        continue-on-error: true
        env:
          TF_CPP_MAX_VLOG_LEVEL: 3
      - name: Install gdb and emacs
        run: |
          sudo apt update
          sudo apt install -y gdb emacs-nox
        env:
          DEBIAN_FRONTEND: noninteractive
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: false
        env:
          REACTANT_TEST_GROUP: ${{ matrix.test_group }}
        # NOTE: Reproduce failure with
        #     gdb --args julia --color=yes --project=test test/runtests.jl
