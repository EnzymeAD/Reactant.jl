import{_ as n,C as r,c as p,o as d,al as a,j as i,G as t,a as s,w as l}from"./chunks/framework.1hcYA_PS.js";const y=JSON.parse('{"title":"Configuration Options","description":"","frontmatter":{},"headers":[],"relativePath":"api/config.md","filePath":"api/config.md","lastUpdated":null}'),c={name:"api/config.md"},h={class:"jldocstring custom-block"},_={class:"jldocstring custom-block"},u={class:"jldocstring custom-block"},g={class:"jldocstring custom-block"};function k(f,e,E,m,T,A){const o=r("Badge");return d(),p("div",null,[e[16]||(e[16]=a('<h1 id="Configuration-Options" tabindex="-1">Configuration Options <a class="header-anchor" href="#Configuration-Options" aria-label="Permalink to &quot;Configuration Options {#Configuration-Options}&quot;">​</a></h1><h2 id="Scoped-Values" tabindex="-1">Scoped Values <a class="header-anchor" href="#Scoped-Values" aria-label="Permalink to &quot;Scoped Values {#Scoped-Values}&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">Warning</p><p>Currently options are scattered in the form of global variables and scoped values. We are in the process of migrating all of them into scoped values.</p></div>',3)),i("details",h,[i("summary",null,[e[0]||(e[0]=i("a",{id:"Reactant.with_config",href:"#Reactant.with_config"},[i("span",{class:"jlbinding"},"Reactant.with_config")],-1)),e[1]||(e[1]=s()),t(o,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[3]||(e[3]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">with_config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Run the function <code>f</code> within a dynamic scope such that all uses of the config within this scope will use the provided values.</p><p><strong>Extended Help</strong></p><p><strong>Configuration Options</strong></p><p><strong>Lowering</strong></p><ul><li><p><code>lower_partialsort_to_approx_top_k</code>: Whether to lower <code>partialsort</code> and <code>partialsortperm</code> to <code>Ops.approx_top_k</code>. Note that XLA only supports lowering <code>ApproxTopK</code> for TPUs unless <code>fallback_approx_top_k_lowering</code> is set to <code>true</code>.</p></li><li><p><code>fallback_approx_top_k_lowering</code>: Whether to lower <code>Ops.approx_top_k</code> to <code>stablehlo.top_k</code> if the XLA backend doesn&#39;t support <code>ApproxTopK</code>. Defaults to <code>true</code>.</p></li></ul><p><strong>DotGeneral</strong></p><ul><li><p><code>dot_general_algorithm</code>: Algorithm preset for <code>stablehlo.dot_general</code>. Can be <code>nothing</code>, <a href="/Reactant.jl/v0.2.107/api/config#Reactant.DotGeneralAlgorithm"><code>DotGeneralAlgorithm</code></a> or <a href="/Reactant.jl/v0.2.107/api/config#Reactant.DotGeneralAlgorithmPreset"><code>DotGeneralAlgorithmPreset</code></a>. Defaults to <code>DotGeneralAlgorithmPreset.DEFAULT</code>.</p></li><li><p><code>dot_general_precision</code>: Precision for <code>stablehlo.dot_general</code>. Can be <code>nothing</code>, or <a href="/Reactant.jl/v0.2.107/api/config#Reactant.DotGeneralPrecision"><code>DotGeneralPrecision</code></a>. Defaults to <code>DotGeneralPrecision.DEFAULT</code>.</p></li></ul>',8)),t(o,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[2]||(e[2]=[i("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/8a5fa7497cc450331f2c34ee4ce70ba9d09128d0/src/Configuration.jl#L6-L31",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[2]})]),e[17]||(e[17]=a('<h3 id="Values" tabindex="-1">Values <a class="header-anchor" href="#Values" aria-label="Permalink to &quot;Values {#Values}&quot;">​</a></h3><ul><li><p><code>DOT_GENERAL_PRECISION</code>: Controls the <code>precision_config</code> for <code>stablehlo.dot_general</code>.</p></li><li><p><code>DOT_GENERAL_ALGORITHM</code>: Controls the <code>algorithm</code> for <code>stablehlo.dot_general</code>.</p></li><li><p><code>LOWER_PARTIALSORT_TO_APPROX_TOP_K</code>: Whether to lower <code>partialsort</code> to <code>Ops.approx_top_k</code>. Note that XLA only supports lowering <code>ApproxTopK</code> for TPUs unless <code>FALLBACK_APPROX_TOP_K_LOWERING</code> is set to <code>true</code>. Defaults to <code>false</code>.</p></li><li><p><code>FALLBACK_APPROX_TOP_K_LOWERING</code>: Whether to fallback to lowering <code>ApproxTopK</code> to <code>stablehlo.top_k</code> if the XLA backend doesn&#39;t support <code>ApproxTopK</code>. Defaults to <code>true</code>.</p></li></ul><h3 id="DotGeneral" tabindex="-1">DotGeneral <a class="header-anchor" href="#DotGeneral" aria-label="Permalink to &quot;DotGeneral {#DotGeneral}&quot;">​</a></h3>',3)),i("details",_,[i("summary",null,[e[4]||(e[4]=i("a",{id:"Reactant.DotGeneralAlgorithmPreset",href:"#Reactant.DotGeneralAlgorithmPreset"},[i("span",{class:"jlbinding"},"Reactant.DotGeneralAlgorithmPreset")],-1)),e[5]||(e[5]=s()),t(o,{type:"info",class:"jlObjectType jlModule",text:"Module"})]),e[7]||(e[7]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DotGeneralAlgorithmPreset</span></span></code></pre></div><p>Controls the <code>precision_config</code> for <code>stablehlo.dot_general</code>. Valid values are:</p><ul><li><p><code>DEFAULT</code></p></li><li><p><code>ANY_F8_ANY_F8_F32</code></p></li><li><p><code>ANY_F8_ANY_F8_F32_FAST_ACCUM</code></p></li><li><p><code>ANY_F8_ANY_F8_ANY</code></p></li><li><p><code>ANY_F8_ANY_F8_ANY_FAST_ACCUM</code></p></li><li><p><code>F16_F16_F16</code></p></li><li><p><code>F16_F16_F32</code></p></li><li><p><code>BF16_BF16_BF16</code></p></li><li><p><code>BF16_BF16_F32</code></p></li><li><p><code>BF16_BF16_F32_X3</code></p></li><li><p><code>BF16_BF16_F32_X6</code></p></li><li><p><code>BF16_BF16_F32_X9</code></p></li><li><p><code>F32_F32_F32</code></p></li><li><p><code>F64_F64_F64</code></p></li></ul><p>The following functions are available:</p><p><code>supported_lhs_eltype(dot_algorithm_preset::DotGeneralAlgorithmPreset.T)</code> <code>supported_rhs_eltype(dot_algorithm_preset::DotGeneralAlgorithmPreset.T)</code> <code>accumulation_eltype(dot_algorithm_preset::DotGeneralAlgorithmPreset.T)</code> <code>supported_output_eltype(dot_algorithm_preset::DotGeneralAlgorithmPreset.T, T1, T2)</code> <code>MLIR.IR.Attribute(dot_algorithm_preset::DotGeneralAlgorithmPreset.T, T1, T2)</code></p>',5)),t(o,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[6]||(e[6]=[i("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/8a5fa7497cc450331f2c34ee4ce70ba9d09128d0/src/Configuration.jl#L167-L194",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[6]})]),i("details",u,[i("summary",null,[e[8]||(e[8]=i("a",{id:"Reactant.DotGeneralPrecision",href:"#Reactant.DotGeneralPrecision"},[i("span",{class:"jlbinding"},"Reactant.DotGeneralPrecision")],-1)),e[9]||(e[9]=s()),t(o,{type:"info",class:"jlObjectType jlModule",text:"Module"})]),e[11]||(e[11]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DotGeneralPrecision</span></span></code></pre></div><p>Controls the <code>precision_config</code> for <code>stablehlo.dot_general</code>. Valid values are:</p><ul><li><p><code>DEFAULT</code></p></li><li><p><code>HIGH</code></p></li><li><p><code>HIGHEST</code></p></li></ul><p>The following functions are available:</p><p><code>MLIR.IR.Attribute(precision::DotGeneralPrecision.T)</code></p>',5)),t(o,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[10]||(e[10]=[i("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/8a5fa7497cc450331f2c34ee4ce70ba9d09128d0/src/Configuration.jl#L65-L77",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[10]})]),i("details",g,[i("summary",null,[e[12]||(e[12]=i("a",{id:"Reactant.DotGeneralAlgorithm",href:"#Reactant.DotGeneralAlgorithm"},[i("span",{class:"jlbinding"},"Reactant.DotGeneralAlgorithm")],-1)),e[13]||(e[13]=s()),t(o,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[15]||(e[15]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DotGeneralAlgorithm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{lhsT}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{rhsT}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{accumT}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    rhs_component_count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lhs_component_count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, num_primitive_operations</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    allow_imprecise_accumulation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DotGeneralAlgorithm{lhsT,rhsT,accumT}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    lhs_component_count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, rhs_component_count</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, num_primitive_operations</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    allow_imprecise_accumulation</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Bool</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Represents the configuration of the <code>stablehlo.dot_general</code> operation.</p><p><strong>Arguments</strong></p><ul><li><p><code>lhsT</code>: The type of the left-hand side operand.</p></li><li><p><code>rhsT</code>: The type of the right-hand side operand.</p></li><li><p><code>accumT</code>: The type of the accumulation operand.</p></li><li><p><code>lhs_component_count</code>: The number of components in the left-hand side operand.</p></li><li><p><code>rhs_component_count</code>: The number of components in the right-hand side operand.</p></li><li><p><code>num_primitive_operations</code>: The number of primitive operations in the <code>stablehlo.dot_general</code> operation.</p></li></ul>`,4)),t(o,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[14]||(e[14]=[i("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/8a5fa7497cc450331f2c34ee4ce70ba9d09128d0/src/Configuration.jl#L103-L125",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[14]})]),e[18]||(e[18]=a('<h2 id="Environment-Variables" tabindex="-1">Environment Variables <a class="header-anchor" href="#Environment-Variables" aria-label="Permalink to &quot;Environment Variables {#Environment-Variables}&quot;">​</a></h2><p>The following environment variables can be used to configure Reactant.</p><h3 id="GPU-Configuration" tabindex="-1">GPU Configuration <a class="header-anchor" href="#GPU-Configuration" aria-label="Permalink to &quot;GPU Configuration {#GPU-Configuration}&quot;">​</a></h3><ul><li><p><code>XLA_REACTANT_GPU_MEM_FRACTION</code>: The fraction of GPU memory to use for XLA. Defaults to <code>0.75</code>.</p></li><li><p><code>XLA_REACTANT_GPU_PREALLOCATE</code>: Whether to preallocate GPU memory. Defaults to <code>true</code>.</p></li><li><p><code>REACTANT_VISIBLE_GPU_DEVICES</code>: A comma-separated list of GPU device IDs to use. Defaults to all visible GPU devices. Preferably use <code>CUDA_VISIBLE_DEVICES</code> instead.</p></li></ul><h3 id="TPU-Configuration" tabindex="-1">TPU Configuration <a class="header-anchor" href="#TPU-Configuration" aria-label="Permalink to &quot;TPU Configuration {#TPU-Configuration}&quot;">​</a></h3><ul><li><code>TPU_LIBRARY_PATH</code>: The path to the libtpu.so library. If not provided, we download and use Scratch.jl to save the library.</li></ul><h3 id="Distributed-Setup" tabindex="-1">Distributed Setup <a class="header-anchor" href="#Distributed-Setup" aria-label="Permalink to &quot;Distributed Setup {#Distributed-Setup}&quot;">​</a></h3><ul><li><code>REACTANT_COORDINATOR_BIND_ADDRESS</code>: The address to bind the coordinator to. If not provided, we try to automatically infer it from the environment.</li></ul>',8))])}const C=n(c,[["render",k]]);export{y as __pageData,C as default};
