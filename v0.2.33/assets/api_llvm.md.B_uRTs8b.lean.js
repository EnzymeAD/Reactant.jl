import{_ as i,C as p,c as o,o as r,j as s,a as n,a2 as t,G as l}from"./chunks/framework.DbU0fEyT.js";const q=JSON.parse('{"title":"LLVM Dialect","description":"","frontmatter":{},"headers":[],"relativePath":"api/llvm.md","filePath":"api/llvm.md","lastUpdated":null}'),c={name:"api/llvm.md"},d={class:"jldocstring custom-block"},m={class:"jldocstring custom-block"},u={class:"jldocstring custom-block"},v={class:"jldocstring custom-block"},b={class:"jldocstring custom-block"},g={class:"jldocstring custom-block"},h={class:"jldocstring custom-block"},f={class:"jldocstring custom-block"},_={class:"jldocstring custom-block"},R={class:"jldocstring custom-block"},y={class:"jldocstring custom-block"},L={class:"jldocstring custom-block"},T={class:"jldocstring custom-block"},I={class:"jldocstring custom-block"},M={class:"jldocstring custom-block"},k={class:"jldocstring custom-block"},j={class:"jldocstring custom-block"},D={class:"jldocstring custom-block"},V={class:"jldocstring custom-block"},A={class:"jldocstring custom-block"};function x(C,a,S,w,E,z){const e=p("Badge");return r(),o("div",null,[a[64]||(a[64]=s("h1",{id:"LLVM-Dialect",tabindex:"-1"},[n("LLVM Dialect "),s("a",{class:"header-anchor",href:"#LLVM-Dialect","aria-label":'Permalink to "LLVM Dialect {#LLVM-Dialect}"'},"â€‹")],-1)),a[65]||(a[65]=s("p",null,[n("Refer to the "),s("a",{href:"https://mlir.llvm.org/docs/Dialects/LLVM/",target:"_blank",rel:"noreferrer"},"official documentation"),n(" for more details.")],-1)),s("details",d,[s("summary",null,[a[0]||(a[0]=s("a",{id:"Reactant.MLIR.Dialects.llvm.call-Tuple{Vector{Reactant.MLIR.IR.Value}, Vector{Reactant.MLIR.IR.Value}}",href:"#Reactant.MLIR.Dialects.llvm.call-Tuple{Vector{Reactant.MLIR.IR.Value}, Vector{Reactant.MLIR.IR.Value}}"},[s("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.llvm.call")],-1)),a[1]||(a[1]=n()),l(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[2]||(a[2]=t("",6))]),s("details",m,[s("summary",null,[a[3]||(a[3]=s("a",{id:"Reactant.MLIR.Dialects.llvm.call_intrinsic-Tuple{Vector{Reactant.MLIR.IR.Value}, Vector{Reactant.MLIR.IR.Value}}",href:"#Reactant.MLIR.Dialects.llvm.call_intrinsic-Tuple{Vector{Reactant.MLIR.IR.Value}, Vector{Reactant.MLIR.IR.Value}}"},[s("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.llvm.call_intrinsic")],-1)),a[4]||(a[4]=n()),l(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[5]||(a[5]=s("p",null,[s("code",null,"call_intrinsic")],-1)),a[6]||(a[6]=s("p",null,"Call the specified llvm intrinsic. If the intrinsic is overloaded, use the MLIR function type of this op to determine which intrinsic to call.",-1)),a[7]||(a[7]=s("p",null,[s("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/e99536676791c30e4e01668646d212ed2ec08716/src/mlir/Dialects/Llvm.jl#L404-L409",target:"_blank",rel:"noreferrer"},"source")],-1))]),s("details",u,[s("summary",null,[a[8]||(a[8]=s("a",{id:"Reactant.MLIR.Dialects.llvm.comdat-Tuple{}",href:"#Reactant.MLIR.Dialects.llvm.comdat-Tuple{}"},[s("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.llvm.comdat")],-1)),a[9]||(a[9]=n()),l(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[10]||(a[10]=t("",5))]),s("details",v,[s("summary",null,[a[11]||(a[11]=s("a",{id:"Reactant.MLIR.Dialects.llvm.comdat_selector-Tuple{}",href:"#Reactant.MLIR.Dialects.llvm.comdat_selector-Tuple{}"},[s("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.llvm.comdat_selector")],-1)),a[12]||(a[12]=n()),l(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[13]||(a[13]=t("",5))]),s("details",b,[s("summary",null,[a[14]||(a[14]=s("a",{id:"Reactant.MLIR.Dialects.llvm.func-Tuple{}",href:"#Reactant.MLIR.Dialects.llvm.func-Tuple{}"},[s("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.llvm.func")],-1)),a[15]||(a[15]=n()),l(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[16]||(a[16]=t("",4))]),s("details",g,[s("summary",null,[a[17]||(a[17]=s("a",{id:"Reactant.MLIR.Dialects.llvm.getelementptr-Tuple{Reactant.MLIR.IR.Value, Vector{Reactant.MLIR.IR.Value}}",href:"#Reactant.MLIR.Dialects.llvm.getelementptr-Tuple{Reactant.MLIR.IR.Value, Vector{Reactant.MLIR.IR.Value}}"},[s("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.llvm.getelementptr")],-1)),a[18]||(a[18]=n()),l(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[19]||(a[19]=t("",7))]),s("details",h,[s("summary",null,[a[20]||(a[20]=s("a",{id:"Reactant.MLIR.Dialects.llvm.inline_asm-Tuple{Vector{Reactant.MLIR.IR.Value}}",href:"#Reactant.MLIR.Dialects.llvm.inline_asm-Tuple{Vector{Reactant.MLIR.IR.Value}}"},[s("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.llvm.inline_asm")],-1)),a[21]||(a[21]=n()),l(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[22]||(a[22]=s("p",null,[s("code",null,"inline_asm")],-1)),a[23]||(a[23]=s("p",null,[n("The InlineAsmOp mirrors the underlying LLVM semantics with a notable exception: the embedded "),s("code",null,"asm_string"),n(" is not allowed to define or reference any symbol or any global variable: only the operands of the op may be read, written, or referenced. Attempting to define or reference any symbol or any global behavior is considered undefined behavior at this time.")],-1)),a[24]||(a[24]=s("p",null,[s("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/e99536676791c30e4e01668646d212ed2ec08716/src/mlir/Dialects/Llvm.jl#L1398-L1407",target:"_blank",rel:"noreferrer"},"source")],-1))]),s("details",f,[s("summary",null,[a[25]||(a[25]=s("a",{id:"Reactant.MLIR.Dialects.llvm.linker_options-Tuple{}",href:"#Reactant.MLIR.Dialects.llvm.linker_options-Tuple{}"},[s("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.llvm.linker_options")],-1)),a[26]||(a[26]=n()),l(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[27]||(a[27]=t("",5))]),s("details",_,[s("summary",null,[a[28]||(a[28]=s("a",{id:"Reactant.MLIR.Dialects.llvm.load-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.llvm.load-Tuple{Reactant.MLIR.IR.Value}"},[s("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.llvm.load")],-1)),a[29]||(a[29]=n()),l(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[30]||(a[30]=t("",7))]),s("details",R,[s("summary",null,[a[31]||(a[31]=s("a",{id:"Reactant.MLIR.Dialects.llvm.mlir_addressof-Tuple{}",href:"#Reactant.MLIR.Dialects.llvm.mlir_addressof-Tuple{}"},[s("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.llvm.mlir_addressof")],-1)),a[32]||(a[32]=n()),l(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[33]||(a[33]=t("",5))]),s("details",y,[s("summary",null,[a[34]||(a[34]=s("a",{id:"Reactant.MLIR.Dialects.llvm.mlir_alias-Tuple{}",href:"#Reactant.MLIR.Dialects.llvm.mlir_alias-Tuple{}"},[s("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.llvm.mlir_alias")],-1)),a[35]||(a[35]=n()),l(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[36]||(a[36]=t("",7))]),s("details",L,[s("summary",null,[a[37]||(a[37]=s("a",{id:"Reactant.MLIR.Dialects.llvm.mlir_constant-Tuple{}",href:"#Reactant.MLIR.Dialects.llvm.mlir_constant-Tuple{}"},[s("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.llvm.mlir_constant")],-1)),a[38]||(a[38]=n()),l(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[39]||(a[39]=t("",9))]),s("details",T,[s("summary",null,[a[40]||(a[40]=s("a",{id:"Reactant.MLIR.Dialects.llvm.mlir_global-Tuple{}",href:"#Reactant.MLIR.Dialects.llvm.mlir_global-Tuple{}"},[s("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.llvm.mlir_global")],-1)),a[41]||(a[41]=n()),l(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[42]||(a[42]=t("",18))]),s("details",I,[s("summary",null,[a[43]||(a[43]=s("a",{id:"Reactant.MLIR.Dialects.llvm.mlir_global_ctors-Tuple{}",href:"#Reactant.MLIR.Dialects.llvm.mlir_global_ctors-Tuple{}"},[s("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.llvm.mlir_global_ctors")],-1)),a[44]||(a[44]=n()),l(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[45]||(a[45]=t("",5))]),s("details",M,[s("summary",null,[a[46]||(a[46]=s("a",{id:"Reactant.MLIR.Dialects.llvm.mlir_global_dtors-Tuple{}",href:"#Reactant.MLIR.Dialects.llvm.mlir_global_dtors-Tuple{}"},[s("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.llvm.mlir_global_dtors")],-1)),a[47]||(a[47]=n()),l(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[48]||(a[48]=t("",5))]),s("details",k,[s("summary",null,[a[49]||(a[49]=s("a",{id:"Reactant.MLIR.Dialects.llvm.mlir_none-Tuple{}",href:"#Reactant.MLIR.Dialects.llvm.mlir_none-Tuple{}"},[s("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.llvm.mlir_none")],-1)),a[50]||(a[50]=n()),l(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[51]||(a[51]=t("",5))]),s("details",j,[s("summary",null,[a[52]||(a[52]=s("a",{id:"Reactant.MLIR.Dialects.llvm.mlir_poison-Tuple{}",href:"#Reactant.MLIR.Dialects.llvm.mlir_poison-Tuple{}"},[s("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.llvm.mlir_poison")],-1)),a[53]||(a[53]=n()),l(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[54]||(a[54]=t("",5))]),s("details",D,[s("summary",null,[a[55]||(a[55]=s("a",{id:"Reactant.MLIR.Dialects.llvm.mlir_undef-Tuple{}",href:"#Reactant.MLIR.Dialects.llvm.mlir_undef-Tuple{}"},[s("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.llvm.mlir_undef")],-1)),a[56]||(a[56]=n()),l(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[57]||(a[57]=t("",5))]),s("details",V,[s("summary",null,[a[58]||(a[58]=s("a",{id:"Reactant.MLIR.Dialects.llvm.mlir_zero-Tuple{}",href:"#Reactant.MLIR.Dialects.llvm.mlir_zero-Tuple{}"},[s("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.llvm.mlir_zero")],-1)),a[59]||(a[59]=n()),l(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[60]||(a[60]=t("",5))]),s("details",A,[s("summary",null,[a[61]||(a[61]=s("a",{id:"Reactant.MLIR.Dialects.llvm.store-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.llvm.store-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[s("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.llvm.store")],-1)),a[62]||(a[62]=n()),l(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),a[63]||(a[63]=t("",7))])])}const O=i(c,[["render",x]]);export{q as __pageData,O as default};
