import{_ as r,C as i,c as u,o as d,j as t,a as l,al as o,G as s,w as n}from"./chunks/framework.Bo9dGuer.js";const be=JSON.parse('{"title":"CHLO Dialect","description":"","frontmatter":{},"headers":[],"relativePath":"api/dialects/chlo.md","filePath":"api/dialects/chlo.md","lastUpdated":null}'),R={name:"api/dialects/chlo.md"},p={class:"jldocstring custom-block"},c={class:"jldocstring custom-block"},b={class:"jldocstring custom-block"},f={class:"jldocstring custom-block"},m={class:"jldocstring custom-block"},I={class:"jldocstring custom-block"},L={class:"jldocstring custom-block"},M={class:"jldocstring custom-block"},g={class:"jldocstring custom-block"},j={class:"jldocstring custom-block"},y={class:"jldocstring custom-block"},D={class:"jldocstring custom-block"},x={class:"jldocstring custom-block"},w={class:"jldocstring custom-block"},k={class:"jldocstring custom-block"},h={class:"jldocstring custom-block"},T={class:"jldocstring custom-block"},V={class:"jldocstring custom-block"},O={class:"jldocstring custom-block"},C={class:"jldocstring custom-block"},z={class:"jldocstring custom-block"},A={class:"jldocstring custom-block"},E={class:"jldocstring custom-block"},H={class:"jldocstring custom-block"},v={class:"jldocstring custom-block"},S={class:"jldocstring custom-block"},$={class:"jldocstring custom-block"},q={class:"jldocstring custom-block"},P={class:"jldocstring custom-block"},_={class:"jldocstring custom-block"},N={class:"jldocstring custom-block"},B={class:"jldocstring custom-block"},G={class:"jldocstring custom-block"},F={class:"jldocstring custom-block"},U={class:"jldocstring custom-block"},Z={class:"jldocstring custom-block"},J={class:"jldocstring custom-block"},K={class:"jldocstring custom-block"},Q={class:"jldocstring custom-block"},W={class:"jldocstring custom-block"},X={class:"jldocstring custom-block"},Y={class:"jldocstring custom-block"},ee={class:"jldocstring custom-block"},te={class:"jldocstring custom-block"},le={class:"jldocstring custom-block"},ae={class:"jldocstring custom-block"},se={class:"jldocstring custom-block"},ne={class:"jldocstring custom-block"},oe={class:"jldocstring custom-block"};function re(ie,e,ue,de,Re,pe){const a=i("Badge");return d(),u("div",null,[e[287]||(e[287]=t("h1",{id:"CHLO-Dialect",tabindex:"-1"},[l("CHLO Dialect "),t("a",{class:"header-anchor",href:"#CHLO-Dialect","aria-label":'Permalink to "CHLO Dialect {#CHLO-Dialect}"'},"â€‹")],-1)),e[288]||(e[288]=t("p",null,[l("Refer to the "),t("a",{href:"https://github.com/openxla/xla/tree/main/xla/mlir_hlo#hlo-client-dialect-chlo",target:"_blank",rel:"noreferrer"},"official documentation"),l(" for more details.")],-1)),t("details",p,[t("summary",null,[e[0]||(e[0]=t("a",{id:"Reactant.MLIR.Dialects.chlo._asin_acos_kernel-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo._asin_acos_kernel-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo._asin_acos_kernel")],-1)),e[1]||(e[1]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[3]||(e[3]=o(`<p><code>_asin_acos_kernel</code></p><p>Returns <code>AsinAcosKernel(operand)</code> element-wise.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>If</span></span>
<span class="line"><span>  w = _asin_acos_kernel(z)</span></span>
<span class="line"><span>  w&#39; = _asin_acos_kernel(I * z)</span></span>
<span class="line"><span>Then</span></span>
<span class="line"><span>  asin(z) = complex(atan2(z.real, w.real), sign(z.imag) * w.imag)</span></span>
<span class="line"><span>  acos(z) = complex(atan2(w.real, z.real), -sign(z.imag) * w.imag)</span></span>
<span class="line"><span>  asinh(z) = complex(sign(z.real) * w&#39;.imag, atan2(z.imag, w&#39;.real))</span></span>
<span class="line"><span>  acosh(z) = complex(w.imag, sign(z.imag) * atan2(w.real, z.real))</span></span></code></pre></div><p>This op is used as an intermediate value in decompositions and should never be constructed directly by frameworks or consumed by backends.</p>`,4)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[2]||(e[2]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L76-L95",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",c,[t("summary",null,[e[4]||(e[4]=t("a",{id:"Reactant.MLIR.Dialects.chlo.acos-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.acos-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.acos")],-1)),e[5]||(e[5]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[7]||(e[7]=t("p",null,[t("code",null,"acos")],-1)),e[8]||(e[8]=t("p",null,[l("Returns "),t("code",null,"Acos(operand)"),l(" element-wise.")],-1)),e[9]||(e[9]=t("p",null,"$",-1)),e[10]||(e[10]=t("p",null,"\\acos(x) = 2 * \\atan(\\sqrt(1 - x^2) / (1 + x)) if x != -1 = pi if x == -1 $",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[6]||(e[6]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L16-L25",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",b,[t("summary",null,[e[11]||(e[11]=t("a",{id:"Reactant.MLIR.Dialects.chlo.acosh-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.acosh-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.acosh")],-1)),e[12]||(e[12]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[14]||(e[14]=t("p",null,[t("code",null,"acosh")],-1)),e[15]||(e[15]=t("p",null,[l("Returns "),t("code",null,"Acosh(operand)"),l(" element-wise.")],-1)),e[16]||(e[16]=t("p",null,"$",-1)),e[17]||(e[17]=t("p",null,"\\acosh(x) = log(x + sqrt(x^2 - 1)) if x >= -1 \\acosh(x) = nan if x < -1 $",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[13]||(e[13]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L46-L55",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",f,[t("summary",null,[e[18]||(e[18]=t("a",{id:"Reactant.MLIR.Dialects.chlo.asin-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.asin-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.asin")],-1)),e[19]||(e[19]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[21]||(e[21]=t("p",null,[t("code",null,"asin")],-1)),e[22]||(e[22]=t("p",null,[l("Returns "),t("code",null,"Asin(operand)"),l(" element-wise.")],-1)),e[23]||(e[23]=t("p",null,"$",-1)),e[24]||(e[24]=t("p",null,"\\asin(x) = 2 * atan(x / (1 + sqrt(1 - x^2))) $",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[20]||(e[20]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L118-L126",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",m,[t("summary",null,[e[25]||(e[25]=t("a",{id:"Reactant.MLIR.Dialects.chlo.asinh-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.asinh-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.asinh")],-1)),e[26]||(e[26]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[28]||(e[28]=t("p",null,[t("code",null,"asinh")],-1)),e[29]||(e[29]=t("p",null,[l("Returns "),t("code",null,"Asinh(operand)"),l(" element-wise.")],-1)),e[30]||(e[30]=t("p",null,"$",-1)),e[31]||(e[31]=t("p",null,"\\asinh(x) = log(x + sqrt(x^2 + 1)) $",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[27]||(e[27]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L147-L155",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",I,[t("summary",null,[e[32]||(e[32]=t("a",{id:"Reactant.MLIR.Dialects.chlo.atan-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.atan-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.atan")],-1)),e[33]||(e[33]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[35]||(e[35]=t("p",null,[t("code",null,"atan")],-1)),e[36]||(e[36]=t("p",null,[l("Returns "),t("code",null,"Atan(operand)"),l(" element-wise.")],-1)),e[37]||(e[37]=t("p",null,"$",-1)),e[38]||(e[38]=t("p",null,"\\atan(x) = \\atan2(x, 1) $",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[34]||(e[34]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L176-L184",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",L,[t("summary",null,[e[39]||(e[39]=t("a",{id:"Reactant.MLIR.Dialects.chlo.atanh-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.atanh-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.atanh")],-1)),e[40]||(e[40]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[42]||(e[42]=t("p",null,[t("code",null,"atanh")],-1)),e[43]||(e[43]=t("p",null,[l("Returns "),t("code",null,"Atanh(operand)"),l(" element-wise.")],-1)),e[44]||(e[44]=t("p",null,"$",-1)),e[45]||(e[45]=t("p",null,"\\atanh(x) = 0.5 * log((1 + x) / (1 - x)) if abs(x) <= 1 = nan otherwise $",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[41]||(e[41]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L205-L214",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",M,[t("summary",null,[e[46]||(e[46]=t("a",{id:"Reactant.MLIR.Dialects.chlo.bessel_i1e-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.bessel_i1e-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.bessel_i1e")],-1)),e[47]||(e[47]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[49]||(e[49]=t("p",null,[t("code",null,"bessel_i1e")],-1)),e[50]||(e[50]=t("p",null,[l("Returns "),t("code",null,"bessel_i1e(operand)"),l(" element-wise.")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[48]||(e[48]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L235-L239",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",g,[t("summary",null,[e[51]||(e[51]=t("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_add-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_add-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_add")],-1)),e[52]||(e[52]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[54]||(e[54]=t("p",null,[t("code",null,"broadcast_add")],-1)),e[55]||(e[55]=t("p",null,[l("Returns "),t("code",null,"lhs + rhs"),l(" element-wise.")],-1)),e[56]||(e[56]=t("p",null,[l("See "),t("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[53]||(e[53]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L262-L269",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",j,[t("summary",null,[e[57]||(e[57]=t("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_and-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_and-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_and")],-1)),e[58]||(e[58]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[60]||(e[60]=t("p",null,[t("code",null,"broadcast_and")],-1)),e[61]||(e[61]=t("p",null,[l("Returns "),t("code",null,"logical_and(lhs, rhs)"),l(" element-wise.")],-1)),e[62]||(e[62]=t("p",null,[l("See "),t("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[59]||(e[59]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L298-L305",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",y,[t("summary",null,[e[63]||(e[63]=t("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_atan2-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_atan2-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_atan2")],-1)),e[64]||(e[64]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[66]||(e[66]=t("p",null,[t("code",null,"broadcast_atan2")],-1)),e[67]||(e[67]=t("p",null,[l("Returns "),t("code",null,"atan2(lhs/rhs)"),l(" element-wise.")],-1)),e[68]||(e[68]=t("p",null,[l("See "),t("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[65]||(e[65]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L334-L341",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",D,[t("summary",null,[e[69]||(e[69]=t("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_compare-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_compare-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_compare")],-1)),e[70]||(e[70]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[72]||(e[72]=o('<p><code>broadcast_compare</code></p><p>Compares <code>lhs</code> and <code>rhs</code> elementwise according to <code>comparison_direction</code> and <code>compare_type</code>. If unspecified, <code>compare_type</code> is FLOAT for float element types, SIGNED for signed element types and UNSIGNED for unsigned element types.</p><p>See <a href="https://www.tensorflow.org/xla/operation_semantics#element-wise_comparison_operations" target="_blank" rel="noreferrer">https://www.tensorflow.org/xla/operation_semantics#element-wise_comparison_operations</a>.</p>',3)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[71]||(e[71]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L370-L380",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",x,[t("summary",null,[e[73]||(e[73]=t("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_complex-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_complex-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_complex")],-1)),e[74]||(e[74]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[76]||(e[76]=t("p",null,[t("code",null,"broadcast_complex")],-1)),e[77]||(e[77]=t("p",null,"Performs element-wise conversion of a pair of real and imaginary values to a complex value.",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[75]||(e[75]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L415-L420",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",w,[t("summary",null,[e[78]||(e[78]=t("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_divide-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_divide-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_divide")],-1)),e[79]||(e[79]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[81]||(e[81]=t("p",null,[t("code",null,"broadcast_divide")],-1)),e[82]||(e[82]=t("p",null,[l("Returns "),t("code",null,"lhs / rhs"),l(" element-wise.")],-1)),e[83]||(e[83]=t("p",null,[l("See "),t("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[80]||(e[80]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L449-L456",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",k,[t("summary",null,[e[84]||(e[84]=t("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_maximum-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_maximum-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_maximum")],-1)),e[85]||(e[85]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[87]||(e[87]=t("p",null,[t("code",null,"broadcast_maximum")],-1)),e[88]||(e[88]=t("p",null,[l("Returns "),t("code",null,"max(lhs, rhs)"),l(" element-wise.")],-1)),e[89]||(e[89]=t("p",null,[l("See "),t("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[86]||(e[86]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L485-L492",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",h,[t("summary",null,[e[90]||(e[90]=t("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_minimum-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_minimum-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_minimum")],-1)),e[91]||(e[91]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[93]||(e[93]=t("p",null,[t("code",null,"broadcast_minimum")],-1)),e[94]||(e[94]=t("p",null,[l("Returns "),t("code",null,"min(lhs, rhs)"),l(" element-wise.")],-1)),e[95]||(e[95]=t("p",null,[l("See "),t("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[92]||(e[92]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L521-L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",T,[t("summary",null,[e[96]||(e[96]=t("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_multiply-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_multiply-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_multiply")],-1)),e[97]||(e[97]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[99]||(e[99]=t("p",null,[t("code",null,"broadcast_multiply")],-1)),e[100]||(e[100]=t("p",null,[l("Returns "),t("code",null,"lhs * rhs"),l(" element-wise.")],-1)),e[101]||(e[101]=t("p",null,[l("See "),t("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[98]||(e[98]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L557-L564",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",V,[t("summary",null,[e[102]||(e[102]=t("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_next_after-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_next_after-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_next_after")],-1)),e[103]||(e[103]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[105]||(e[105]=t("p",null,[t("code",null,"broadcast_next_after")],-1)),e[106]||(e[106]=t("p",null,[l("Returns the next representable value of "),t("code",null,"lhs"),l(" in the direction of "),t("code",null,"rhs"),l(", element-wise. It can also return a subnormal number.")],-1)),e[107]||(e[107]=t("p",null,"Equivalent to the C++ std::nextafter function.",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[104]||(e[104]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L593-L600",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",O,[t("summary",null,[e[108]||(e[108]=t("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_or-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_or-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_or")],-1)),e[109]||(e[109]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[111]||(e[111]=t("p",null,[t("code",null,"broadcast_or")],-1)),e[112]||(e[112]=t("p",null,[l("Returns "),t("code",null,"logical_or(lhs, rhs)"),l(" element-wise.")],-1)),e[113]||(e[113]=t("p",null,[l("See "),t("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[110]||(e[110]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L629-L636",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",C,[t("summary",null,[e[114]||(e[114]=t("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_polygamma-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_polygamma-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_polygamma")],-1)),e[115]||(e[115]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[117]||(e[117]=t("p",null,[t("code",null,"broadcast_polygamma")],-1)),e[118]||(e[118]=t("p",null,[l("Returns "),t("code",null,"Polygamma(operand, operand)"),l(" element-wise.")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[116]||(e[116]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L665-L669",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",z,[t("summary",null,[e[119]||(e[119]=t("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_power-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_power-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_power")],-1)),e[120]||(e[120]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[122]||(e[122]=t("p",null,[t("code",null,"broadcast_power")],-1)),e[123]||(e[123]=t("p",null,[l("Returns "),t("code",null,"lhs ^ rhs"),l(" element-wise.")],-1)),e[124]||(e[124]=t("p",null,[l("See "),t("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[121]||(e[121]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L698-L705",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",A,[t("summary",null,[e[125]||(e[125]=t("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_remainder-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_remainder-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_remainder")],-1)),e[126]||(e[126]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[128]||(e[128]=t("p",null,[t("code",null,"broadcast_remainder")],-1)),e[129]||(e[129]=t("p",null,[l("Returns "),t("code",null,"lhs % rhs"),l(" element-wise.")],-1)),e[130]||(e[130]=t("p",null,[l("See "),t("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[127]||(e[127]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L734-L741",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",E,[t("summary",null,[e[131]||(e[131]=t("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_select-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_select-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_select")],-1)),e[132]||(e[132]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[134]||(e[134]=t("p",null,[t("code",null,"broadcast_select")],-1)),e[135]||(e[135]=t("p",null,"Constructs an output array from elements of two input arrays, based on the values of a predicate array.",-1)),e[136]||(e[136]=t("p",null,[l("See "),t("a",{href:"https://www.tensorflow.org/xla/operation_semantics#select",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#select")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[133]||(e[133]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L770-L777",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",H,[t("summary",null,[e[137]||(e[137]=t("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_shift_left-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_shift_left-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_shift_left")],-1)),e[138]||(e[138]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[140]||(e[140]=t("p",null,[t("code",null,"broadcast_shift_left")],-1)),e[141]||(e[141]=t("p",null,[l("Returns "),t("code",null,"lhs << rhs"),l(" element-wise.")],-1)),e[142]||(e[142]=t("p",null,[l("See "),t("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[139]||(e[139]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L804-L811",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",v,[t("summary",null,[e[143]||(e[143]=t("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_shift_right_arithmetic-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_shift_right_arithmetic-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_shift_right_arithmetic")],-1)),e[144]||(e[144]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[146]||(e[146]=t("p",null,[t("code",null,"broadcast_shift_right_arithmetic")],-1)),e[147]||(e[147]=t("p",null,[l("Returns "),t("code",null,"lhs >> rhs"),l(" element-wise.")],-1)),e[148]||(e[148]=t("p",null,[l("See "),t("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[145]||(e[145]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L840-L847",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",S,[t("summary",null,[e[149]||(e[149]=t("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_shift_right_logical-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_shift_right_logical-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_shift_right_logical")],-1)),e[150]||(e[150]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[152]||(e[152]=t("p",null,[t("code",null,"broadcast_shift_right_logical")],-1)),e[153]||(e[153]=t("p",null,[l("Returns "),t("code",null,"lhs >> rhs"),l(" element-wise.")],-1)),e[154]||(e[154]=t("p",null,[l("See "),t("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[151]||(e[151]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L876-L883",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",$,[t("summary",null,[e[155]||(e[155]=t("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_subtract-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_subtract-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_subtract")],-1)),e[156]||(e[156]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[158]||(e[158]=t("p",null,[t("code",null,"broadcast_subtract")],-1)),e[159]||(e[159]=t("p",null,[l("Returns "),t("code",null,"lhs - rhs"),l(" element-wise.")],-1)),e[160]||(e[160]=t("p",null,[l("See "),t("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[157]||(e[157]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L912-L919",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",q,[t("summary",null,[e[161]||(e[161]=t("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_xor-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_xor-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_xor")],-1)),e[162]||(e[162]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[164]||(e[164]=t("p",null,[t("code",null,"broadcast_xor")],-1)),e[165]||(e[165]=t("p",null,[l("Returns "),t("code",null,"logical_xor(lhs, rhs)"),l(" element-wise.")],-1)),e[166]||(e[166]=t("p",null,[l("See "),t("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[163]||(e[163]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L948-L955",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",P,[t("summary",null,[e[167]||(e[167]=t("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_zeta-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_zeta-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_zeta")],-1)),e[168]||(e[168]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[170]||(e[170]=t("p",null,[t("code",null,"broadcast_zeta")],-1)),e[171]||(e[171]=t("p",null,[l("Returns "),t("code",null,"Zeta(operand, operand)"),l(" element-wise.")],-1)),e[172]||(e[172]=t("p",null,"$",-1)),e[173]||(e[173]=t("p",null,"(\\zeta(x, q) = \\sum_{n=0}^{\\infty} (q + n)^{-x}) $",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[169]||(e[169]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L984-L992",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",_,[t("summary",null,[e[174]||(e[174]=t("a",{id:"Reactant.MLIR.Dialects.chlo.conj-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.conj-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.conj")],-1)),e[175]||(e[175]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[177]||(e[177]=t("p",null,[t("code",null,"conj")],-1)),e[178]||(e[178]=t("p",null,[l("Returns "),t("code",null,"Conj(operand)"),l(" element-wise.")],-1)),e[179]||(e[179]=t("p",null,"$",-1)),e[180]||(e[180]=t("p",null,"\\conj(x) = (\\real(x), \\neg(\\imag(x))) $",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[176]||(e[176]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L1021-L1029",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",N,[t("summary",null,[e[181]||(e[181]=t("a",{id:"Reactant.MLIR.Dialects.chlo.constant-Tuple{}",href:"#Reactant.MLIR.Dialects.chlo.constant-Tuple{}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.constant")],-1)),e[182]||(e[182]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[184]||(e[184]=t("p",null,[t("code",null,"constant")],-1)),e[185]||(e[185]=t("p",null,"Represents a constant value.",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[183]||(e[183]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L1077-L1081",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",B,[t("summary",null,[e[186]||(e[186]=t("a",{id:"Reactant.MLIR.Dialects.chlo.constant_like-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.constant_like-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.constant_like")],-1)),e[187]||(e[187]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[189]||(e[189]=t("p",null,[t("code",null,"constant_like")],-1)),e[190]||(e[190]=t("p",null,"Returns a splat constant of the same shape as the operand.",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[188]||(e[188]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L1050-L1054",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",G,[t("summary",null,[e[191]||(e[191]=t("a",{id:"Reactant.MLIR.Dialects.chlo.cosh-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.cosh-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.cosh")],-1)),e[192]||(e[192]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[194]||(e[194]=t("p",null,[t("code",null,"cosh")],-1)),e[195]||(e[195]=t("p",null,[l("Returns "),t("code",null,"Cosh(operand)"),l(" element-wise.")],-1)),e[196]||(e[196]=t("p",null,"$",-1)),e[197]||(e[197]=t("p",null,"\\cosh(x) = (e^x + e^-x) / 2 $",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[193]||(e[193]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L1102-L1110",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",F,[t("summary",null,[e[198]||(e[198]=t("a",{id:"Reactant.MLIR.Dialects.chlo.digamma-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.digamma-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.digamma")],-1)),e[199]||(e[199]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[201]||(e[201]=t("p",null,[t("code",null,"digamma")],-1)),e[202]||(e[202]=t("p",null,[l("Returns "),t("code",null,"Digamma(operand)"),l(" element-wise.")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[200]||(e[200]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L1131-L1135",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",U,[t("summary",null,[e[203]||(e[203]=t("a",{id:"Reactant.MLIR.Dialects.chlo.erf-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.erf-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.erf")],-1)),e[204]||(e[204]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[206]||(e[206]=t("p",null,[t("code",null,"erf")],-1)),e[207]||(e[207]=t("p",null,[l("Computes the Gauss error function of "),t("code",null,"x"),l(" element-wise.")],-1)),e[208]||(e[208]=t("p",null,"erf(x) = erf_impl(x) if |x| < 1 = 1 - erfc_impl(x) otherwise",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[205]||(e[205]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L1185-L1192",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",Z,[t("summary",null,[e[209]||(e[209]=t("a",{id:"Reactant.MLIR.Dialects.chlo.erf_inv-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.erf_inv-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.erf_inv")],-1)),e[210]||(e[210]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[212]||(e[212]=t("p",null,[t("code",null,"erf_inv")],-1)),e[213]||(e[213]=t("p",null,[l("Returns "),t("code",null,"ErfInv(operand)"),l(" element-wise.")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[211]||(e[211]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L1158-L1162",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",J,[t("summary",null,[e[214]||(e[214]=t("a",{id:"Reactant.MLIR.Dialects.chlo.erfc-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.erfc-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.erfc")],-1)),e[215]||(e[215]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[217]||(e[217]=t("p",null,[t("code",null,"erfc")],-1)),e[218]||(e[218]=t("p",null,"Computes an approximation of the error function complement (1 - erf(x)).",-1)),e[219]||(e[219]=t("p",null,"erfc(x) = erfc_impl(x) if |x| > 1 = 1 - erf_impl(x) otherwise",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[216]||(e[216]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L1213-L1220",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",K,[t("summary",null,[e[220]||(e[220]=t("a",{id:"Reactant.MLIR.Dialects.chlo.is_inf-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.is_inf-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.is_inf")],-1)),e[221]||(e[221]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[223]||(e[223]=t("p",null,[t("code",null,"is_inf")],-1)),e[224]||(e[224]=t("p",null,"Returns if a value is +/-inf element-wise.",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[222]||(e[222]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L1241-L1245",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",Q,[t("summary",null,[e[225]||(e[225]=t("a",{id:"Reactant.MLIR.Dialects.chlo.is_neg_inf-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.is_neg_inf-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.is_neg_inf")],-1)),e[226]||(e[226]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[228]||(e[228]=t("p",null,[t("code",null,"is_neg_inf")],-1)),e[229]||(e[229]=t("p",null,"Returns if a value is -inf element-wise.",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[227]||(e[227]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L1266-L1270",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",W,[t("summary",null,[e[230]||(e[230]=t("a",{id:"Reactant.MLIR.Dialects.chlo.is_pos_inf-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.is_pos_inf-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.is_pos_inf")],-1)),e[231]||(e[231]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[233]||(e[233]=t("p",null,[t("code",null,"is_pos_inf")],-1)),e[234]||(e[234]=t("p",null,"Returns if a value is +inf element-wise.",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[232]||(e[232]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L1293-L1297",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",X,[t("summary",null,[e[235]||(e[235]=t("a",{id:"Reactant.MLIR.Dialects.chlo.lgamma-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.lgamma-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.lgamma")],-1)),e[236]||(e[236]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[238]||(e[238]=t("p",null,[t("code",null,"lgamma")],-1)),e[239]||(e[239]=t("p",null,[l("Returns "),t("code",null,"Lgamma(operand)"),l(" element-wise.")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[237]||(e[237]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L1320-L1324",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",Y,[t("summary",null,[e[240]||(e[240]=t("a",{id:"Reactant.MLIR.Dialects.chlo.next_after-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.next_after-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.next_after")],-1)),e[241]||(e[241]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[243]||(e[243]=t("p",null,[t("code",null,"next_after")],-1)),e[244]||(e[244]=t("p",null,[l("Returns the next representable value of "),t("code",null,"x"),l(" in the direction of "),t("code",null,"y"),l(", element-wise. It can also return a subnormal number.")],-1)),e[245]||(e[245]=t("p",null,"Equivalent to the C++ std::nextafter function.",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[242]||(e[242]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L1345-L1352",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",ee,[t("summary",null,[e[246]||(e[246]=t("a",{id:"Reactant.MLIR.Dialects.chlo.polygamma-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.polygamma-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.polygamma")],-1)),e[247]||(e[247]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[249]||(e[249]=t("p",null,[t("code",null,"polygamma")],-1)),e[250]||(e[250]=t("p",null,[l("Returns "),t("code",null,"Polygamma(operand, operand)"),l(" element-wise.")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[248]||(e[248]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L1375-L1379",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",te,[t("summary",null,[e[251]||(e[251]=t("a",{id:"Reactant.MLIR.Dialects.chlo.ragged_dot-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.ragged_dot-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.ragged_dot")],-1)),e[252]||(e[252]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[254]||(e[254]=o("<p><code>ragged_dot</code></p><p>This operation takes three tensor argsâ€“-lhs, rhs, and group_sizesâ€“-and a &quot;ragged_dot_dimension_numbers&quot; attribute. Like dot_general, the lhs and rhs are allowed arbitrary batch and contracting dimensions. Additionally, the lhs is required to have one ragged dimension, and the rhs may have at most one group dimension. The op has three modes, depending on the kind of the lhs ragged dimension.</p><p>In mode 1, the shape-signature is <code>[b,m,k], [g,b,k,n], [b,g] -&gt; [b,m,n]</code>. Here the ragged dimension is an lhs non-contracting dimension (<code>m</code>). The dimensions <code>b</code> and <code>k</code> represent batch and contracting dimensions respectively. The rhs is required to have a group dimension (<code>g</code>).</p><p>In mode 2, the shape-signature is <code>[b,m,k], [b,k,n], [b,g] -&gt; [g,b,m,n]</code>. Here the ragged dimension is an lhs/rhs contracting dimension (<code>k</code>).</p><p>In mode 3, the shape-signature is <code>[b,m,k], [b,k,n], [g] -&gt; [b,m,n]</code>. Here the ragged dimension is an lhs/rhs batch dimension (<code>b</code>).</p>",5)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[253]||(e[253]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L1402-L1423",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",le,[t("summary",null,[e[255]||(e[255]=t("a",{id:"Reactant.MLIR.Dialects.chlo.sinh-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.sinh-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.sinh")],-1)),e[256]||(e[256]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[258]||(e[258]=t("p",null,[t("code",null,"sinh")],-1)),e[259]||(e[259]=t("p",null,[l("Returns "),t("code",null,"Sinh(operand)"),l(" element-wise.")],-1)),e[260]||(e[260]=t("p",null,"$",-1)),e[261]||(e[261]=t("p",null,"\\sinh(x) = (e^x - e^-x) / 2 if |x| < 1 = e^(x + log(1/2)) - e^(-x + log(1/2)) otherwise. $",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[257]||(e[257]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L1455-L1464",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",ae,[t("summary",null,[e[262]||(e[262]=t("a",{id:"Reactant.MLIR.Dialects.chlo.square-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.square-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.square")],-1)),e[263]||(e[263]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[265]||(e[265]=t("p",null,[t("code",null,"square")],-1)),e[266]||(e[266]=t("p",null,[l("Returns "),t("code",null,"Square(operand)"),l(" element-wise.")],-1)),e[267]||(e[267]=t("p",null,"$",-1)),e[268]||(e[268]=t("p",null,"\\square(x) = complex((x.real - x.imag) * (x.real + x.imag), x.real * x.imag * 2) if x is a complex number = x * x otherwise $",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[264]||(e[264]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L1485-L1494",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",se,[t("summary",null,[e[269]||(e[269]=t("a",{id:"Reactant.MLIR.Dialects.chlo.tan-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.tan-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.tan")],-1)),e[270]||(e[270]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[272]||(e[272]=t("p",null,[t("code",null,"tan")],-1)),e[273]||(e[273]=t("p",null,[l("Returns "),t("code",null,"Tan(operand)"),l(" element-wise.")],-1)),e[274]||(e[274]=t("p",null,"$",-1)),e[275]||(e[275]=t("p",null,"\\tan(x) = \\sin(x) / \\cos(x) $",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[271]||(e[271]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L1515-L1523",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",ne,[t("summary",null,[e[276]||(e[276]=t("a",{id:"Reactant.MLIR.Dialects.chlo.top_k-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.top_k-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.top_k")],-1)),e[277]||(e[277]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[279]||(e[279]=o('<p><code>top_k</code></p><p>If the input is a vector (rank-1), finds the <code>k</code> largest entries in the vector and outputs their values and indices as vectors. Thus <code>values[j]</code> is the <code>j</code>-th largest entry in <code>input</code>, and its index is <code>indices[j]</code>.</p><p>For matrices (resp. higher rank input), computes the top <code>k</code> entries in each row (resp. vector along the last dimension). Thus,</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>values.shape = indices.shape = input.shape[:-1] + [k]</span></span></code></pre></div><p>If two elements are equal, the lower-index element appears first.</p>',5)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[278]||(e[278]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L1544-L1559",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),t("details",oe,[t("summary",null,[e[280]||(e[280]=t("a",{id:"Reactant.MLIR.Dialects.chlo.zeta-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.zeta-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.zeta")],-1)),e[281]||(e[281]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[283]||(e[283]=t("p",null,[t("code",null,"zeta")],-1)),e[284]||(e[284]=t("p",null,[l("Returns "),t("code",null,"Zeta(operand, operand)"),l(" element-wise.")],-1)),e[285]||(e[285]=t("p",null,"$",-1)),e[286]||(e[286]=t("p",null,"(\\zeta(x, q) = \\sum_{n=0}^{\\infty} (q + n)^{-x}) $",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>e[282]||(e[282]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/269f6f64c074a1f01cbe6828d1b003edb7eb170f/src/mlir/Dialects/CHLO.jl#L1587-L1595",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})])])}const fe=r(R,[["render",re]]);export{be as __pageData,fe as default};
