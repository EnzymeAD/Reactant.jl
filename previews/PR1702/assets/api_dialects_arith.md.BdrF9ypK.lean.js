import{_ as o,C as r,c as p,o as d,j as t,a as n,al as l,G as s,w as i}from"./chunks/framework.Dab6bc9Q.js";const ce=JSON.parse('{"title":"Arithmetic Dialect","description":"","frontmatter":{},"headers":[],"relativePath":"api/dialects/arith.md","filePath":"api/dialects/arith.md","lastUpdated":null}'),c={name:"api/dialects/arith.md"},u={class:"jldocstring custom-block"},h={class:"jldocstring custom-block"},f={class:"jldocstring custom-block"},m={class:"jldocstring custom-block"},g={class:"jldocstring custom-block"},b={class:"jldocstring custom-block"},R={class:"jldocstring custom-block"},I={class:"jldocstring custom-block"},v={class:"jldocstring custom-block"},y={class:"jldocstring custom-block"},T={class:"jldocstring custom-block"},M={class:"jldocstring custom-block"},x={class:"jldocstring custom-block"},L={class:"jldocstring custom-block"},j={class:"jldocstring custom-block"},k={class:"jldocstring custom-block"},D={class:"jldocstring custom-block"},_={class:"jldocstring custom-block"},w={class:"jldocstring custom-block"},V={class:"jldocstring custom-block"},A={class:"jldocstring custom-block"},S={class:"jldocstring custom-block"},C={class:"jldocstring custom-block"},E={class:"jldocstring custom-block"},z={class:"jldocstring custom-block"},N={class:"jldocstring custom-block"},q={class:"jldocstring custom-block"},P={class:"jldocstring custom-block"},O={class:"jldocstring custom-block"},W={class:"jldocstring custom-block"},F={class:"jldocstring custom-block"},U={class:"jldocstring custom-block"},B={class:"jldocstring custom-block"},G={class:"jldocstring custom-block"},$={class:"jldocstring custom-block"},X={class:"jldocstring custom-block"},J={class:"jldocstring custom-block"},H={class:"jldocstring custom-block"},K={class:"jldocstring custom-block"},Q={class:"jldocstring custom-block"},Y={class:"jldocstring custom-block"},Z={class:"jldocstring custom-block"},ee={class:"jldocstring custom-block"},te={class:"jldocstring custom-block"},ae={class:"jldocstring custom-block"},se={class:"jldocstring custom-block"};function ne(ie,e,le,oe,re,pe){const a=r("Badge");return d(),p("div",null,[e[195]||(e[195]=t("h1",{id:"Arithmetic-Dialect",tabindex:"-1"},[n("Arithmetic Dialect "),t("a",{class:"header-anchor",href:"#Arithmetic-Dialect","aria-label":'Permalink to "Arithmetic Dialect {#Arithmetic-Dialect}"'},"â€‹")],-1)),e[196]||(e[196]=t("p",null,[n("Refer to the "),t("a",{href:"https://mlir.llvm.org/docs/Dialects/ArithOps/",target:"_blank",rel:"noreferrer"},"official documentation"),n(" for more details.")],-1)),t("details",u,[t("summary",null,[e[0]||(e[0]=t("a",{id:"Reactant.MLIR.Dialects.arith.addf-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.addf-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.addf")],-1)),e[1]||(e[1]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[3]||(e[3]=l("",5)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[2]||(e[2]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L16-L39",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",h,[t("summary",null,[e[4]||(e[4]=t("a",{id:"Reactant.MLIR.Dialects.arith.addi-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.addi-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.addi")],-1)),e[5]||(e[5]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[7]||(e[7]=l("",6)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[6]||(e[6]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L67-L100",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",f,[t("summary",null,[e[8]||(e[8]=t("a",{id:"Reactant.MLIR.Dialects.arith.addui_extended-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.addui_extended-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.addui_extended")],-1)),e[9]||(e[9]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[11]||(e[11]=l("",4)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[10]||(e[10]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L129-L149",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",m,[t("summary",null,[e[12]||(e[12]=t("a",{id:"Reactant.MLIR.Dialects.arith.andi-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.andi-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.andi")],-1)),e[13]||(e[13]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[15]||(e[15]=l("",4)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[14]||(e[14]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L171-L191",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",g,[t("summary",null,[e[16]||(e[16]=t("a",{id:"Reactant.MLIR.Dialects.arith.bitcast-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.bitcast-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.bitcast")],-1)),e[17]||(e[17]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[19]||(e[19]=t("p",null,[t("code",null,"bitcast")],-1)),e[20]||(e[20]=t("p",null,"Bitcast an integer or floating point value to an integer or floating point value of equal bit width. When operating on vectors, casts elementwise.",-1)),e[21]||(e[21]=t("p",null,[n("Note that this implements a logical bitcast independent of target endianness. This allows constant folding without target information and is consitent with the bitcast constant folders in LLVM (see "),t("a",{href:"https://github.com/llvm/llvm-project/blob/18c19414eb/llvm/lib/IR/ConstantFold.cpp#L168",target:"_blank",rel:"noreferrer"},"https://github.com/llvm/llvm-project/blob/18c19414eb/llvm/lib/IR/ConstantFold.cpp#L168"),n(") For targets where the source and target type have the same endianness (which is the standard), this cast will also change no bits at runtime, but it may still require an operation, for example if the machine has different floating point and integer register files. For targets that have a different endianness for the source and target types (e.g. float is big-endian and integer is little-endian) a proper lowering would add operations to swap the order of words in addition to the bitcast.")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[18]||(e[18]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L214-L231",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",b,[t("summary",null,[e[22]||(e[22]=t("a",{id:"Reactant.MLIR.Dialects.arith.ceildivsi-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.ceildivsi-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.ceildivsi")],-1)),e[23]||(e[23]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[25]||(e[25]=l("",5)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[24]||(e[24]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L251-L267",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",R,[t("summary",null,[e[26]||(e[26]=t("a",{id:"Reactant.MLIR.Dialects.arith.ceildivui-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.ceildivui-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.ceildivui")],-1)),e[27]||(e[27]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[29]||(e[29]=l("",5)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[28]||(e[28]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L290-L307",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",I,[t("summary",null,[e[30]||(e[30]=t("a",{id:"Reactant.MLIR.Dialects.arith.cmpf-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.cmpf-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.cmpf")],-1)),e[31]||(e[31]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[33]||(e[33]=l("",4)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[32]||(e[32]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L330-L356",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",v,[t("summary",null,[e[34]||(e[34]=t("a",{id:"Reactant.MLIR.Dialects.arith.cmpi-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.cmpi-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.cmpi")],-1)),e[35]||(e[35]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[37]||(e[37]=l("",9)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[36]||(e[36]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L385-L449",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",y,[t("summary",null,[e[38]||(e[38]=t("a",{id:"Reactant.MLIR.Dialects.arith.constant-Tuple{}",href:"#Reactant.MLIR.Dialects.arith.constant-Tuple{}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.constant")],-1)),e[39]||(e[39]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[41]||(e[41]=l("",4)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[40]||(e[40]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L476-L492",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",T,[t("summary",null,[e[42]||(e[42]=t("a",{id:"Reactant.MLIR.Dialects.arith.divsi-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.divsi-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.divsi")],-1)),e[43]||(e[43]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[45]||(e[45]=l("",5)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[44]||(e[44]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L540-L563",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",M,[t("summary",null,[e[46]||(e[46]=t("a",{id:"Reactant.MLIR.Dialects.arith.divui-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.divui-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.divui")],-1)),e[47]||(e[47]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[49]||(e[49]=l("",5)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[48]||(e[48]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L586-L609",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",x,[t("summary",null,[e[50]||(e[50]=t("a",{id:"Reactant.MLIR.Dialects.arith.extf-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.extf-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.extf")],-1)),e[51]||(e[51]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[53]||(e[53]=t("p",null,[t("code",null,"extf")],-1)),e[54]||(e[54]=t("p",null,"Cast a floating-point value to a larger floating-point-typed value. The destination type must to be strictly wider than the source type. When operating on vectors, casts elementwise.",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[52]||(e[52]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L632-L638",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",L,[t("summary",null,[e[55]||(e[55]=t("a",{id:"Reactant.MLIR.Dialects.arith.extsi-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.extsi-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.extsi")],-1)),e[56]||(e[56]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[58]||(e[58]=l("",4)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[57]||(e[57]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L659-L678",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",j,[t("summary",null,[e[59]||(e[59]=t("a",{id:"Reactant.MLIR.Dialects.arith.extui-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.extui-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.extui")],-1)),e[60]||(e[60]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[62]||(e[62]=l("",4)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[61]||(e[61]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L698-L716",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",k,[t("summary",null,[e[63]||(e[63]=t("a",{id:"Reactant.MLIR.Dialects.arith.floordivsi-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.floordivsi-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.floordivsi")],-1)),e[64]||(e[64]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[66]||(e[66]=l("",5)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[65]||(e[65]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L788-L805",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",D,[t("summary",null,[e[67]||(e[67]=t("a",{id:"Reactant.MLIR.Dialects.arith.fptosi-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.fptosi-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.fptosi")],-1)),e[68]||(e[68]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[70]||(e[70]=t("p",null,[t("code",null,"fptosi")],-1)),e[71]||(e[71]=t("p",null,"Cast from a value interpreted as floating-point to the nearest (rounding towards zero) signed integer value. When operating on vectors, casts elementwise.",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[69]||(e[69]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L736-L742",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",_,[t("summary",null,[e[72]||(e[72]=t("a",{id:"Reactant.MLIR.Dialects.arith.fptoui-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.fptoui-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.fptoui")],-1)),e[73]||(e[73]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[75]||(e[75]=t("p",null,[t("code",null,"fptoui")],-1)),e[76]||(e[76]=t("p",null,"Cast from a value interpreted as floating-point to the nearest (rounding towards zero) unsigned integer value. When operating on vectors, casts elementwise.",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[74]||(e[74]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L762-L768",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",w,[t("summary",null,[e[77]||(e[77]=t("a",{id:"Reactant.MLIR.Dialects.arith.index_cast-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.index_cast-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.index_cast")],-1)),e[78]||(e[78]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[80]||(e[80]=t("p",null,[t("code",null,"index_cast")],-1)),e[81]||(e[81]=t("p",null,"Casts between scalar or vector integers and corresponding 'index' scalar or vectors. Index is an integer of platform-specific bit width. If casting to a wider integer, the value is sign-extended. If casting to a narrower integer, the value is truncated.",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[79]||(e[79]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L828-L835",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",V,[t("summary",null,[e[82]||(e[82]=t("a",{id:"Reactant.MLIR.Dialects.arith.index_castui-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.index_castui-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.index_castui")],-1)),e[83]||(e[83]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[85]||(e[85]=t("p",null,[t("code",null,"index_castui")],-1)),e[86]||(e[86]=t("p",null,"Casts between scalar or vector integers and corresponding 'index' scalar or vectors. Index is an integer of platform-specific bit width. If casting to a wider integer, the value is zero-extended. If casting to a narrower integer, the value is truncated.",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[84]||(e[84]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L855-L862",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",A,[t("summary",null,[e[87]||(e[87]=t("a",{id:"Reactant.MLIR.Dialects.arith.maximumf-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.maximumf-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.maximumf")],-1)),e[88]||(e[88]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[90]||(e[90]=l("",4)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[89]||(e[89]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L967-L979",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",S,[t("summary",null,[e[91]||(e[91]=t("a",{id:"Reactant.MLIR.Dialects.arith.maxnumf-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.maxnumf-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.maxnumf")],-1)),e[92]||(e[92]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[94]||(e[94]=l("",4)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[93]||(e[93]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L882-L895",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",C,[t("summary",null,[e[95]||(e[95]=t("a",{id:"Reactant.MLIR.Dialects.arith.minimumf-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.minimumf-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.minimumf")],-1)),e[96]||(e[96]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[98]||(e[98]=l("",4)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[97]||(e[97]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L1092-L1104",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",E,[t("summary",null,[e[99]||(e[99]=t("a",{id:"Reactant.MLIR.Dialects.arith.minnumf-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.minnumf-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.minnumf")],-1)),e[100]||(e[100]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[102]||(e[102]=l("",4)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[101]||(e[101]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L1007-L1020",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",z,[t("summary",null,[e[103]||(e[103]=t("a",{id:"Reactant.MLIR.Dialects.arith.mulf-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.mulf-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.mulf")],-1)),e[104]||(e[104]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[106]||(e[106]=l("",5)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[105]||(e[105]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L1132-L1155",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",N,[t("summary",null,[e[107]||(e[107]=t("a",{id:"Reactant.MLIR.Dialects.arith.muli-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.muli-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.muli")],-1)),e[108]||(e[108]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[110]||(e[110]=l("",6)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[109]||(e[109]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L1183-L1216",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",q,[t("summary",null,[e[111]||(e[111]=t("a",{id:"Reactant.MLIR.Dialects.arith.mulsi_extended-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.mulsi_extended-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.mulsi_extended")],-1)),e[112]||(e[112]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[114]||(e[114]=l("",4)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[113]||(e[113]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L1245-L1265",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",P,[t("summary",null,[e[115]||(e[115]=t("a",{id:"Reactant.MLIR.Dialects.arith.mului_extended-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.mului_extended-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.mului_extended")],-1)),e[116]||(e[116]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[118]||(e[118]=l("",4)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[117]||(e[117]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L1293-L1313",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",O,[t("summary",null,[e[119]||(e[119]=t("a",{id:"Reactant.MLIR.Dialects.arith.negf-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.negf-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.negf")],-1)),e[120]||(e[120]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[122]||(e[122]=l("",4)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[121]||(e[121]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L1341-L1361",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",W,[t("summary",null,[e[123]||(e[123]=t("a",{id:"Reactant.MLIR.Dialects.arith.ori-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.ori-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.ori")],-1)),e[124]||(e[124]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[126]||(e[126]=l("",4)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[125]||(e[125]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L1388-L1408",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",F,[t("summary",null,[e[127]||(e[127]=t("a",{id:"Reactant.MLIR.Dialects.arith.remf-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.remf-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.remf")],-1)),e[128]||(e[128]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[130]||(e[130]=t("p",null,[t("code",null,"remf")],-1)),e[131]||(e[131]=t("p",null,"Returns the floating point division remainder. The remainder has the same sign as the dividend (lhs operand).",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[129]||(e[129]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L1431-L1436",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",U,[t("summary",null,[e[132]||(e[132]=t("a",{id:"Reactant.MLIR.Dialects.arith.remsi-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.remsi-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.remsi")],-1)),e[133]||(e[133]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[135]||(e[135]=l("",5)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[134]||(e[134]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L1464-L1486",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",B,[t("summary",null,[e[136]||(e[136]=t("a",{id:"Reactant.MLIR.Dialects.arith.remui-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.remui-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.remui")],-1)),e[137]||(e[137]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[139]||(e[139]=l("",5)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[138]||(e[138]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L1509-L1531",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",G,[t("summary",null,[e[140]||(e[140]=t("a",{id:"Reactant.MLIR.Dialects.arith.scaling_extf-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.scaling_extf-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.scaling_extf")],-1)),e[141]||(e[141]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[143]||(e[143]=l("",5)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[142]||(e[142]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L1581-L1615",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",$,[t("summary",null,[e[144]||(e[144]=t("a",{id:"Reactant.MLIR.Dialects.arith.scaling_truncf-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.scaling_truncf-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.scaling_truncf")],-1)),e[145]||(e[145]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[147]||(e[147]=l("",5)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[146]||(e[146]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L1638-L1674",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",X,[t("summary",null,[e[148]||(e[148]=t("a",{id:"Reactant.MLIR.Dialects.arith.select-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.select-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.select")],-1)),e[149]||(e[149]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[151]||(e[151]=l("",8)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[150]||(e[150]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L2103-L2139",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",J,[t("summary",null,[e[152]||(e[152]=t("a",{id:"Reactant.MLIR.Dialects.arith.shli-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.shli-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.shli")],-1)),e[153]||(e[153]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[155]||(e[155]=l("",5)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[154]||(e[154]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L1704-L1726",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",H,[t("summary",null,[e[156]||(e[156]=t("a",{id:"Reactant.MLIR.Dialects.arith.shrsi-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.shrsi-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.shrsi")],-1)),e[157]||(e[157]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[159]||(e[159]=l("",4)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[158]||(e[158]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L1755-L1775",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",K,[t("summary",null,[e[160]||(e[160]=t("a",{id:"Reactant.MLIR.Dialects.arith.shrui-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.shrui-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.shrui")],-1)),e[161]||(e[161]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[163]||(e[163]=l("",4)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[162]||(e[162]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L1798-L1814",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",Q,[t("summary",null,[e[164]||(e[164]=t("a",{id:"Reactant.MLIR.Dialects.arith.sitofp-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.sitofp-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.sitofp")],-1)),e[165]||(e[165]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[167]||(e[167]=t("p",null,[t("code",null,"sitofp")],-1)),e[168]||(e[168]=t("p",null,"Cast from a value interpreted as a signed integer to the corresponding floating-point value. If the value cannot be exactly represented, it is rounded using the default rounding mode. When operating on vectors, casts elementwise.",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[166]||(e[166]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L1554-L1561",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",Y,[t("summary",null,[e[169]||(e[169]=t("a",{id:"Reactant.MLIR.Dialects.arith.subf-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.subf-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.subf")],-1)),e[170]||(e[170]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[172]||(e[172]=l("",5)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[171]||(e[171]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L1837-L1860",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",Z,[t("summary",null,[e[173]||(e[173]=t("a",{id:"Reactant.MLIR.Dialects.arith.subi-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.subi-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.subi")],-1)),e[174]||(e[174]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[176]||(e[176]=l("",6)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[175]||(e[175]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L1888-L1921",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",ee,[t("summary",null,[e[177]||(e[177]=t("a",{id:"Reactant.MLIR.Dialects.arith.truncf-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.truncf-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.truncf")],-1)),e[178]||(e[178]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[180]||(e[180]=t("p",null,[t("code",null,"truncf")],-1)),e[181]||(e[181]=t("p",null,"Truncate a floating-point value to a smaller floating-point-typed value. The destination type must be strictly narrower than the source type. If the value cannot be exactly represented, it is rounded using the provided rounding mode or the default one if no rounding mode is provided. When operating on vectors, casts elementwise.",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[179]||(e[179]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L1950-L1958",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",te,[t("summary",null,[e[182]||(e[182]=t("a",{id:"Reactant.MLIR.Dialects.arith.trunci-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.trunci-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.trunci")],-1)),e[183]||(e[183]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[185]||(e[185]=l("",5)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[184]||(e[184]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L1983-L2011",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",ae,[t("summary",null,[e[186]||(e[186]=t("a",{id:"Reactant.MLIR.Dialects.arith.uitofp-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.uitofp-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.uitofp")],-1)),e[187]||(e[187]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[189]||(e[189]=t("p",null,[t("code",null,"uitofp")],-1)),e[190]||(e[190]=t("p",null,"Cast from a value interpreted as unsigned integer to the corresponding floating-point value. If the value cannot be exactly represented, it is rounded using the default rounding mode. When operating on vectors, casts elementwise.",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[188]||(e[188]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L2033-L2040",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",se,[t("summary",null,[e[191]||(e[191]=t("a",{id:"Reactant.MLIR.Dialects.arith.xori-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.arith.xori-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.arith.xori")],-1)),e[192]||(e[192]=n()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[194]||(e[194]=l("",4)),s(a,{type:"info",class:"source-link",text:"source"},{default:i(()=>[...e[193]||(e[193]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/faa47751d33a04f9d819f85608125d1f21bec267/src/mlir/Dialects/Arith.jl#L2060-L2080",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const ue=o(c,[["render",ne]]);export{ce as __pageData,ue as default};
