import{_ as i,C as c,c as d,o as r,j as t,a,G as n,w as l,al as o}from"./chunks/framework.D9ALn07x.js";const M=JSON.parse('{"title":"TPU Dialect","description":"","frontmatter":{},"headers":[],"relativePath":"api/dialects/tpu.md","filePath":"api/dialects/tpu.md","lastUpdated":null}'),u={name:"api/dialects/tpu.md"},p={class:"jldocstring custom-block"},b={class:"jldocstring custom-block"},m={class:"jldocstring custom-block"},f={class:"jldocstring custom-block"},R={class:"jldocstring custom-block"},g={class:"jldocstring custom-block"},h={class:"jldocstring custom-block"};function I(T,e,y,_,j,v){const s=c("Badge");return r(),d("div",null,[e[32]||(e[32]=t("h1",{id:"TPU-Dialect",tabindex:"-1"},[a("TPU Dialect "),t("a",{class:"header-anchor",href:"#TPU-Dialect","aria-label":'Permalink to "TPU Dialect {#TPU-Dialect}"'},"â€‹")],-1)),e[33]||(e[33]=t("p",null,[a("Refer to the "),t("a",{href:"https://github.com/jax-ml/jax/blob/main/jaxlib/mosaic/dialect/tpu/tpu.td",target:"_blank",rel:"noreferrer"},"official documentation"),a(" for more details.")],-1)),t("details",p,[t("summary",null,[e[0]||(e[0]=t("a",{id:"Reactant.MLIR.Dialects.tpu.broadcast_in_sublanes-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.tpu.broadcast_in_sublanes-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.tpu.broadcast_in_sublanes")],-1)),e[1]||(e[1]=a()),n(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[3]||(e[3]=t("p",null,[t("code",null,"broadcast_in_sublanes")],-1)),e[4]||(e[4]=t("p",null,[a("For each sublane "),t("code",null,"i"),a(", broadcasts the value in lane "),t("code",null,"lane + i"),a(" along the entire sublane. If "),t("code",null,"lane + i"),a(" is not in [0, lane_count), then the value in sublane "),t("code",null,"i"),a(" is not defined (can be anything).")],-1)),n(s,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[2]||(e[2]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/b8ba46633ce793da509c6570d5dbc83a47fb9bf8/src/mlir/Dialects/TPU.jl#L133-L139",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",b,[t("summary",null,[e[5]||(e[5]=t("a",{id:"Reactant.MLIR.Dialects.tpu.create_subelement_mask-Tuple{}",href:"#Reactant.MLIR.Dialects.tpu.create_subelement_mask-Tuple{}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.tpu.create_subelement_mask")],-1)),e[6]||(e[6]=a()),n(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[8]||(e[8]=o("",10)),n(s,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[7]||(e[7]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/b8ba46633ce793da509c6570d5dbc83a47fb9bf8/src/mlir/Dialects/TPU.jl#L201-L228",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",m,[t("summary",null,[e[9]||(e[9]=t("a",{id:"Reactant.MLIR.Dialects.tpu.dynamic_gather-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.tpu.dynamic_gather-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.tpu.dynamic_gather")],-1)),e[10]||(e[10]=a()),n(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[12]||(e[12]=o("",6)),n(s,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[11]||(e[11]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/b8ba46633ce793da509c6570d5dbc83a47fb9bf8/src/mlir/Dialects/TPU.jl#L287-L303",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",f,[t("summary",null,[e[13]||(e[13]=t("a",{id:"Reactant.MLIR.Dialects.tpu.iota-Tuple{}",href:"#Reactant.MLIR.Dialects.tpu.iota-Tuple{}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.tpu.iota")],-1)),e[14]||(e[14]=a()),n(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[16]||(e[16]=o("",6)),n(s,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[15]||(e[15]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/b8ba46633ce793da509c6570d5dbc83a47fb9bf8/src/mlir/Dialects/TPU.jl#L572-L590",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",R,[t("summary",null,[e[17]||(e[17]=t("a",{id:"Reactant.MLIR.Dialects.tpu.load-Tuple{Reactant.MLIR.IR.Value, Vector{Reactant.MLIR.IR.Value}}",href:"#Reactant.MLIR.Dialects.tpu.load-Tuple{Reactant.MLIR.IR.Value, Vector{Reactant.MLIR.IR.Value}}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.tpu.load")],-1)),e[18]||(e[18]=a()),n(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[20]||(e[20]=o("",2)),n(s,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[19]||(e[19]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/b8ba46633ce793da509c6570d5dbc83a47fb9bf8/src/mlir/Dialects/TPU.jl#L610-L616",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",g,[t("summary",null,[e[21]||(e[21]=t("a",{id:"Reactant.MLIR.Dialects.tpu.rotate-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.tpu.rotate-Tuple{Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.tpu.rotate")],-1)),e[22]||(e[22]=a()),n(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[24]||(e[24]=t("p",null,[t("code",null,"rotate")],-1)),e[25]||(e[25]=t("p",null,[a("Rotates the given vector by the given amount in the given dimension, i.e., for a 2D vector of shape (m, n), rotating dim 0 by "),t("code",null,"amount"),a(" will shift a row at index "),t("code",null,"i"),a(" to index "),t("code",null,"(i + amount) % m")],-1)),n(s,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[23]||(e[23]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/b8ba46633ce793da509c6570d5dbc83a47fb9bf8/src/mlir/Dialects/TPU.jl#L1045-L1051",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",h,[t("summary",null,[e[26]||(e[26]=t("a",{id:"Reactant.MLIR.Dialects.tpu.scan_count-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.tpu.scan_count-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[t("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.tpu.scan_count")],-1)),e[27]||(e[27]=a()),n(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[29]||(e[29]=t("p",null,[t("code",null,"scan_count")],-1)),e[30]||(e[30]=t("p",null,"ScanCountOp calculates the running duplicate occurrence count of the elements in the input vector, %values. The output vector, %counts, contains the running duplicate occurrence count for the corresponding element in the input vector, where the count is performed in ascending order of element indices. For example, if the elements of %values at indices 0, 5, and 7 had duplicate values, then the elements of %counts at indices 0, 5, and 7 would be 1, 2, and 3, respectively.",-1)),e[31]||(e[31]=t("p",null,"A mask vector, %in_mask, specifies which of the elements in the input vector are eligible for counting. An element in %values that has its mask set to 0 will always have a count of 1 in %counts, regardless of the position in the vector, or whether there were duplicates or not.",-1)),n(s,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[28]||(e[28]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/b8ba46633ce793da509c6570d5dbc83a47fb9bf8/src/mlir/Dialects/TPU.jl#L1104-L1119",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const L=i(u,[["render",I]]);export{M as __pageData,L as default};
