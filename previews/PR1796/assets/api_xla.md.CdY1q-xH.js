import{_ as o,C as r,c as p,o as c,j as t,a as i,al as n,G as a,w as l}from"./chunks/framework.xwC-Hn33.js";const E=JSON.parse('{"title":"XLA","description":"","frontmatter":{},"headers":[],"relativePath":"api/xla.md","filePath":"api/xla.md","lastUpdated":null}'),d={name:"api/xla.md"},u={class:"jldocstring custom-block"},k={class:"jldocstring custom-block"},h={class:"jldocstring custom-block"},b={class:"jldocstring custom-block"},g={class:"jldocstring custom-block"};function y(_,e,A,m,f,v){const s=r("Badge");return c(),p("div",null,[e[22]||(e[22]=t("h1",{id:"XLA",tabindex:"-1"},[i("XLA "),t("a",{class:"header-anchor",href:"#XLA","aria-label":'Permalink to "XLA {#XLA}"'},"â€‹")],-1)),t("details",u,[t("summary",null,[e[0]||(e[0]=t("a",{id:"Reactant.XLA.AllocatorStats",href:"#Reactant.XLA.AllocatorStats"},[t("span",{class:"jlbinding"},"Reactant.XLA.AllocatorStats")],-1)),e[1]||(e[1]=i()),a(s,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[3]||(e[3]=n('<p>AllocatorStats()</p><p>Contains the following fields:</p><ul><li><p><code>num_allocs</code></p></li><li><p><code>bytes_in_use</code></p></li><li><p><code>peak_bytes_in_use</code></p></li><li><p><code>largest_alloc_size</code></p></li><li><p><code>bytes_limit</code></p></li><li><p><code>bytes_reserved</code></p></li><li><p><code>peak_bytes_reserved</code></p></li><li><p><code>bytes_reservable_limit</code></p></li><li><p><code>largest_free_block_bytes</code></p></li><li><p><code>pool_bytes</code></p></li><li><p><code>peak_pool_bytes</code></p></li></ul><p>It should be constructed using the <a href="/Reactant.jl/previews/PR1796/api/xla#Reactant.XLA.allocatorstats"><code>allocatorstats</code></a> function.</p>',4)),a(s,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[2]||(e[2]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/a695000e463c5e1b454e09ae12354a60b30dcee1/src/xla/Stats.jl#L19-L36",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",k,[t("summary",null,[e[4]||(e[4]=t("a",{id:"Reactant.XLA.allocatorstats",href:"#Reactant.XLA.allocatorstats"},[t("span",{class:"jlbinding"},"Reactant.XLA.allocatorstats")],-1)),e[5]||(e[5]=i()),a(s,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[7]||(e[7]=t("p",null,"allocatorstats([device])",-1)),e[8]||(e[8]=t("p",null,[i("Return an "),t("a",{href:"/Reactant.jl/previews/PR1796/api/xla#Reactant.XLA.AllocatorStats"},[t("code",null,"AllocatorStats")]),i(" instance with information about the device specific allocator.")],-1)),e[9]||(e[9]=t("div",{class:"warning custom-block"},[t("p",{class:"custom-block-title"},"Warning"),t("p",null,"This method is currently not implemented for the CPU device.")],-1)),a(s,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[6]||(e[6]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/a695000e463c5e1b454e09ae12354a60b30dcee1/src/xla/Stats.jl#L72-L80",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",h,[t("summary",null,[e[10]||(e[10]=t("a",{id:"Reactant.XLA.cost_analysis",href:"#Reactant.XLA.cost_analysis"},[t("span",{class:"jlbinding"},"Reactant.XLA.cost_analysis")],-1)),e[11]||(e[11]=i()),a(s,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[13]||(e[13]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cost_analysis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractLoadedExecutable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cost_analysis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Reactant.Thunk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns a HloCostAnalysisProperties object with the cost analysis of the loaded executable.</p>`,2)),a(s,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[12]||(e[12]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/a695000e463c5e1b454e09ae12354a60b30dcee1/src/xla/Stats.jl#L137-L142",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",b,[t("summary",null,[e[14]||(e[14]=t("a",{id:"Reactant.XLA.device_ordinal",href:"#Reactant.XLA.device_ordinal"},[t("span",{class:"jlbinding"},"Reactant.XLA.device_ordinal")],-1)),e[15]||(e[15]=i()),a(s,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[17]||(e[17]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">device_ordinal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(device</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Device</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Given the device, return the corresponding global device ordinal in the client.</p>',2)),a(s,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[16]||(e[16]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/a695000e463c5e1b454e09ae12354a60b30dcee1/src/xla/Device.jl#L16-L20",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),t("details",g,[t("summary",null,[e[18]||(e[18]=t("a",{id:"Reactant.XLA.device_properties-Tuple{Reactant.XLA.AbstractDevice}",href:"#Reactant.XLA.device_properties-Tuple{Reactant.XLA.AbstractDevice}"},[t("span",{class:"jlbinding"},"Reactant.XLA.device_properties")],-1)),e[19]||(e[19]=i()),a(s,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),e[21]||(e[21]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">device_properties</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(device</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractDevice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Get a struct containing device properties. Which exact fields are populated relies on the underlying device implementation.</p>',2)),a(s,{type:"info",class:"source-link",text:"source"},{default:l(()=>[...e[20]||(e[20]=[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/a695000e463c5e1b454e09ae12354a60b30dcee1/src/xla/Device.jl#L54-L59",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const C=o(d,[["render",y]]);export{E as __pageData,C as default};
