import{_ as r,C as i,c as u,o as d,j as e,a as l,al as o,G as s,w as n}from"./chunks/framework.D9Uc5eKn.js";const ft=JSON.parse('{"title":"CHLO Dialect","description":"","frontmatter":{},"headers":[],"relativePath":"api/dialects/chlo.md","filePath":"api/dialects/chlo.md","lastUpdated":null}'),R={name:"api/dialects/chlo.md"},p={class:"jldocstring custom-block"},c={class:"jldocstring custom-block"},f={class:"jldocstring custom-block"},b={class:"jldocstring custom-block"},m={class:"jldocstring custom-block"},I={class:"jldocstring custom-block"},L={class:"jldocstring custom-block"},M={class:"jldocstring custom-block"},g={class:"jldocstring custom-block"},j={class:"jldocstring custom-block"},y={class:"jldocstring custom-block"},D={class:"jldocstring custom-block"},x={class:"jldocstring custom-block"},w={class:"jldocstring custom-block"},k={class:"jldocstring custom-block"},h={class:"jldocstring custom-block"},T={class:"jldocstring custom-block"},V={class:"jldocstring custom-block"},_={class:"jldocstring custom-block"},O={class:"jldocstring custom-block"},C={class:"jldocstring custom-block"},z={class:"jldocstring custom-block"},A={class:"jldocstring custom-block"},E={class:"jldocstring custom-block"},H={class:"jldocstring custom-block"},v={class:"jldocstring custom-block"},S={class:"jldocstring custom-block"},$={class:"jldocstring custom-block"},q={class:"jldocstring custom-block"},P={class:"jldocstring custom-block"},N={class:"jldocstring custom-block"},B={class:"jldocstring custom-block"},G={class:"jldocstring custom-block"},F={class:"jldocstring custom-block"},U={class:"jldocstring custom-block"},Z={class:"jldocstring custom-block"},J={class:"jldocstring custom-block"},K={class:"jldocstring custom-block"},Q={class:"jldocstring custom-block"},W={class:"jldocstring custom-block"},X={class:"jldocstring custom-block"},Y={class:"jldocstring custom-block"},tt={class:"jldocstring custom-block"},et={class:"jldocstring custom-block"},lt={class:"jldocstring custom-block"},at={class:"jldocstring custom-block"},st={class:"jldocstring custom-block"},nt={class:"jldocstring custom-block"},ot={class:"jldocstring custom-block"};function rt(it,t,ut,dt,Rt,pt){const a=i("Badge");return d(),u("div",null,[t[287]||(t[287]=e("h1",{id:"CHLO-Dialect",tabindex:"-1"},[l("CHLO Dialect "),e("a",{class:"header-anchor",href:"#CHLO-Dialect","aria-label":'Permalink to "CHLO Dialect {#CHLO-Dialect}"'},"â€‹")],-1)),t[288]||(t[288]=e("p",null,[l("Refer to the "),e("a",{href:"https://github.com/openxla/xla/tree/main/xla/mlir_hlo#hlo-client-dialect-chlo",target:"_blank",rel:"noreferrer"},"official documentation"),l(" for more details.")],-1)),e("details",p,[e("summary",null,[t[0]||(t[0]=e("a",{id:"Reactant.MLIR.Dialects.chlo._asin_acos_kernel-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo._asin_acos_kernel-Tuple{Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo._asin_acos_kernel")],-1)),t[1]||(t[1]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[3]||(t[3]=o(`<p><code>_asin_acos_kernel</code></p><p>Returns <code>AsinAcosKernel(operand)</code> element-wise.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>If</span></span>
<span class="line"><span>  w = _asin_acos_kernel(z)</span></span>
<span class="line"><span>  w&#39; = _asin_acos_kernel(I * z)</span></span>
<span class="line"><span>Then</span></span>
<span class="line"><span>  asin(z) = complex(atan2(z.real, w.real), sign(z.imag) * w.imag)</span></span>
<span class="line"><span>  acos(z) = complex(atan2(w.real, z.real), -sign(z.imag) * w.imag)</span></span>
<span class="line"><span>  asinh(z) = complex(sign(z.real) * w&#39;.imag, atan2(z.imag, w&#39;.real))</span></span>
<span class="line"><span>  acosh(z) = complex(w.imag, sign(z.imag) * atan2(w.real, z.real))</span></span></code></pre></div><p>This op is used as an intermediate value in decompositions and should never be constructed directly by frameworks or consumed by backends.</p>`,4)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[2]||(t[2]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L76-L95",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[2]})]),e("details",c,[e("summary",null,[t[4]||(t[4]=e("a",{id:"Reactant.MLIR.Dialects.chlo.acos-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.acos-Tuple{Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.acos")],-1)),t[5]||(t[5]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[7]||(t[7]=e("p",null,[e("code",null,"acos")],-1)),t[8]||(t[8]=e("p",null,[l("Returns "),e("code",null,"Acos(operand)"),l(" element-wise.")],-1)),t[9]||(t[9]=e("p",null,"$",-1)),t[10]||(t[10]=e("p",null,"\\acos(x) = 2 * \\atan(\\sqrt(1 - x^2) / (1 + x)) if x != -1 = pi if x == -1 $",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[6]||(t[6]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L16-L25",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[6]})]),e("details",f,[e("summary",null,[t[11]||(t[11]=e("a",{id:"Reactant.MLIR.Dialects.chlo.acosh-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.acosh-Tuple{Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.acosh")],-1)),t[12]||(t[12]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[14]||(t[14]=e("p",null,[e("code",null,"acosh")],-1)),t[15]||(t[15]=e("p",null,[l("Returns "),e("code",null,"Acosh(operand)"),l(" element-wise.")],-1)),t[16]||(t[16]=e("p",null,"$",-1)),t[17]||(t[17]=e("p",null,"\\acosh(x) = log(x + sqrt(x^2 - 1)) if x >= -1 \\acosh(x) = nan if x < -1 $",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[13]||(t[13]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L46-L55",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[13]})]),e("details",b,[e("summary",null,[t[18]||(t[18]=e("a",{id:"Reactant.MLIR.Dialects.chlo.asin-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.asin-Tuple{Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.asin")],-1)),t[19]||(t[19]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[21]||(t[21]=e("p",null,[e("code",null,"asin")],-1)),t[22]||(t[22]=e("p",null,[l("Returns "),e("code",null,"Asin(operand)"),l(" element-wise.")],-1)),t[23]||(t[23]=e("p",null,"$",-1)),t[24]||(t[24]=e("p",null,"\\asin(x) = 2 * atan(x / (1 + sqrt(1 - x^2))) $",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[20]||(t[20]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L118-L126",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[20]})]),e("details",m,[e("summary",null,[t[25]||(t[25]=e("a",{id:"Reactant.MLIR.Dialects.chlo.asinh-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.asinh-Tuple{Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.asinh")],-1)),t[26]||(t[26]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[28]||(t[28]=e("p",null,[e("code",null,"asinh")],-1)),t[29]||(t[29]=e("p",null,[l("Returns "),e("code",null,"Asinh(operand)"),l(" element-wise.")],-1)),t[30]||(t[30]=e("p",null,"$",-1)),t[31]||(t[31]=e("p",null,"\\asinh(x) = log(x + sqrt(x^2 + 1)) $",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[27]||(t[27]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L147-L155",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[27]})]),e("details",I,[e("summary",null,[t[32]||(t[32]=e("a",{id:"Reactant.MLIR.Dialects.chlo.atan-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.atan-Tuple{Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.atan")],-1)),t[33]||(t[33]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[35]||(t[35]=e("p",null,[e("code",null,"atan")],-1)),t[36]||(t[36]=e("p",null,[l("Returns "),e("code",null,"Atan(operand)"),l(" element-wise.")],-1)),t[37]||(t[37]=e("p",null,"$",-1)),t[38]||(t[38]=e("p",null,"\\atan(x) = \\atan2(x, 1) $",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[34]||(t[34]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L176-L184",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[34]})]),e("details",L,[e("summary",null,[t[39]||(t[39]=e("a",{id:"Reactant.MLIR.Dialects.chlo.atanh-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.atanh-Tuple{Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.atanh")],-1)),t[40]||(t[40]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[42]||(t[42]=e("p",null,[e("code",null,"atanh")],-1)),t[43]||(t[43]=e("p",null,[l("Returns "),e("code",null,"Atanh(operand)"),l(" element-wise.")],-1)),t[44]||(t[44]=e("p",null,"$",-1)),t[45]||(t[45]=e("p",null,"\\atanh(x) = 0.5 * log((1 + x) / (1 - x)) if abs(x) <= 1 = nan otherwise $",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[41]||(t[41]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L205-L214",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[41]})]),e("details",M,[e("summary",null,[t[46]||(t[46]=e("a",{id:"Reactant.MLIR.Dialects.chlo.bessel_i1e-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.bessel_i1e-Tuple{Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.bessel_i1e")],-1)),t[47]||(t[47]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[49]||(t[49]=e("p",null,[e("code",null,"bessel_i1e")],-1)),t[50]||(t[50]=e("p",null,[l("Returns "),e("code",null,"bessel_i1e(operand)"),l(" element-wise.")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[48]||(t[48]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L235-L239",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[48]})]),e("details",g,[e("summary",null,[t[51]||(t[51]=e("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_add-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_add-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_add")],-1)),t[52]||(t[52]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[54]||(t[54]=e("p",null,[e("code",null,"broadcast_add")],-1)),t[55]||(t[55]=e("p",null,[l("Returns "),e("code",null,"lhs + rhs"),l(" element-wise.")],-1)),t[56]||(t[56]=e("p",null,[l("See "),e("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[53]||(t[53]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L262-L269",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[53]})]),e("details",j,[e("summary",null,[t[57]||(t[57]=e("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_and-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_and-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_and")],-1)),t[58]||(t[58]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[60]||(t[60]=e("p",null,[e("code",null,"broadcast_and")],-1)),t[61]||(t[61]=e("p",null,[l("Returns "),e("code",null,"logical_and(lhs, rhs)"),l(" element-wise.")],-1)),t[62]||(t[62]=e("p",null,[l("See "),e("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[59]||(t[59]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L298-L305",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[59]})]),e("details",y,[e("summary",null,[t[63]||(t[63]=e("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_atan2-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_atan2-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_atan2")],-1)),t[64]||(t[64]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[66]||(t[66]=e("p",null,[e("code",null,"broadcast_atan2")],-1)),t[67]||(t[67]=e("p",null,[l("Returns "),e("code",null,"atan2(lhs/rhs)"),l(" element-wise.")],-1)),t[68]||(t[68]=e("p",null,[l("See "),e("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[65]||(t[65]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L334-L341",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[65]})]),e("details",D,[e("summary",null,[t[69]||(t[69]=e("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_compare-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_compare-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_compare")],-1)),t[70]||(t[70]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[72]||(t[72]=o('<p><code>broadcast_compare</code></p><p>Compares <code>lhs</code> and <code>rhs</code> elementwise according to <code>comparison_direction</code> and <code>compare_type</code>. If unspecified, <code>compare_type</code> is FLOAT for float element types, SIGNED for signed element types and UNSIGNED for unsigned element types.</p><p>See <a href="https://www.tensorflow.org/xla/operation_semantics#element-wise_comparison_operations" target="_blank" rel="noreferrer">https://www.tensorflow.org/xla/operation_semantics#element-wise_comparison_operations</a>.</p>',3)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[71]||(t[71]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L370-L380",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[71]})]),e("details",x,[e("summary",null,[t[73]||(t[73]=e("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_complex-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_complex-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_complex")],-1)),t[74]||(t[74]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[76]||(t[76]=e("p",null,[e("code",null,"broadcast_complex")],-1)),t[77]||(t[77]=e("p",null,"Performs element-wise conversion of a pair of real and imaginary values to a complex value.",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[75]||(t[75]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L415-L420",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[75]})]),e("details",w,[e("summary",null,[t[78]||(t[78]=e("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_divide-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_divide-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_divide")],-1)),t[79]||(t[79]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[81]||(t[81]=e("p",null,[e("code",null,"broadcast_divide")],-1)),t[82]||(t[82]=e("p",null,[l("Returns "),e("code",null,"lhs / rhs"),l(" element-wise.")],-1)),t[83]||(t[83]=e("p",null,[l("See "),e("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[80]||(t[80]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L449-L456",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[80]})]),e("details",k,[e("summary",null,[t[84]||(t[84]=e("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_maximum-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_maximum-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_maximum")],-1)),t[85]||(t[85]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[87]||(t[87]=e("p",null,[e("code",null,"broadcast_maximum")],-1)),t[88]||(t[88]=e("p",null,[l("Returns "),e("code",null,"max(lhs, rhs)"),l(" element-wise.")],-1)),t[89]||(t[89]=e("p",null,[l("See "),e("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[86]||(t[86]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L485-L492",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[86]})]),e("details",h,[e("summary",null,[t[90]||(t[90]=e("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_minimum-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_minimum-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_minimum")],-1)),t[91]||(t[91]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[93]||(t[93]=e("p",null,[e("code",null,"broadcast_minimum")],-1)),t[94]||(t[94]=e("p",null,[l("Returns "),e("code",null,"min(lhs, rhs)"),l(" element-wise.")],-1)),t[95]||(t[95]=e("p",null,[l("See "),e("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[92]||(t[92]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L521-L528",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[92]})]),e("details",T,[e("summary",null,[t[96]||(t[96]=e("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_multiply-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_multiply-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_multiply")],-1)),t[97]||(t[97]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[99]||(t[99]=e("p",null,[e("code",null,"broadcast_multiply")],-1)),t[100]||(t[100]=e("p",null,[l("Returns "),e("code",null,"lhs * rhs"),l(" element-wise.")],-1)),t[101]||(t[101]=e("p",null,[l("See "),e("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[98]||(t[98]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L557-L564",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[98]})]),e("details",V,[e("summary",null,[t[102]||(t[102]=e("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_next_after-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_next_after-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_next_after")],-1)),t[103]||(t[103]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[105]||(t[105]=e("p",null,[e("code",null,"broadcast_next_after")],-1)),t[106]||(t[106]=e("p",null,[l("Returns the next representable value of "),e("code",null,"lhs"),l(" in the direction of "),e("code",null,"rhs"),l(", element-wise. It can also return a subnormal number.")],-1)),t[107]||(t[107]=e("p",null,"Equivalent to the C++ std::nextafter function.",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[104]||(t[104]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L593-L600",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[104]})]),e("details",_,[e("summary",null,[t[108]||(t[108]=e("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_or-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_or-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_or")],-1)),t[109]||(t[109]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[111]||(t[111]=e("p",null,[e("code",null,"broadcast_or")],-1)),t[112]||(t[112]=e("p",null,[l("Returns "),e("code",null,"logical_or(lhs, rhs)"),l(" element-wise.")],-1)),t[113]||(t[113]=e("p",null,[l("See "),e("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[110]||(t[110]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L629-L636",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[110]})]),e("details",O,[e("summary",null,[t[114]||(t[114]=e("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_polygamma-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_polygamma-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_polygamma")],-1)),t[115]||(t[115]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[117]||(t[117]=e("p",null,[e("code",null,"broadcast_polygamma")],-1)),t[118]||(t[118]=e("p",null,[l("Returns "),e("code",null,"Polygamma(operand, operand)"),l(" element-wise.")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[116]||(t[116]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L665-L669",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[116]})]),e("details",C,[e("summary",null,[t[119]||(t[119]=e("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_power-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_power-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_power")],-1)),t[120]||(t[120]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[122]||(t[122]=e("p",null,[e("code",null,"broadcast_power")],-1)),t[123]||(t[123]=e("p",null,[l("Returns "),e("code",null,"lhs ^ rhs"),l(" element-wise.")],-1)),t[124]||(t[124]=e("p",null,[l("See "),e("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[121]||(t[121]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L698-L705",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[121]})]),e("details",z,[e("summary",null,[t[125]||(t[125]=e("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_remainder-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_remainder-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_remainder")],-1)),t[126]||(t[126]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[128]||(t[128]=e("p",null,[e("code",null,"broadcast_remainder")],-1)),t[129]||(t[129]=e("p",null,[l("Returns "),e("code",null,"lhs % rhs"),l(" element-wise.")],-1)),t[130]||(t[130]=e("p",null,[l("See "),e("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[127]||(t[127]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L734-L741",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[127]})]),e("details",A,[e("summary",null,[t[131]||(t[131]=e("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_select-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_select-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_select")],-1)),t[132]||(t[132]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[134]||(t[134]=e("p",null,[e("code",null,"broadcast_select")],-1)),t[135]||(t[135]=e("p",null,"Constructs an output array from elements of two input arrays, based on the values of a predicate array.",-1)),t[136]||(t[136]=e("p",null,[l("See "),e("a",{href:"https://www.tensorflow.org/xla/operation_semantics#select",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#select")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[133]||(t[133]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L770-L777",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[133]})]),e("details",E,[e("summary",null,[t[137]||(t[137]=e("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_shift_left-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_shift_left-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_shift_left")],-1)),t[138]||(t[138]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[140]||(t[140]=e("p",null,[e("code",null,"broadcast_shift_left")],-1)),t[141]||(t[141]=e("p",null,[l("Returns "),e("code",null,"lhs << rhs"),l(" element-wise.")],-1)),t[142]||(t[142]=e("p",null,[l("See "),e("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[139]||(t[139]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L804-L811",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[139]})]),e("details",H,[e("summary",null,[t[143]||(t[143]=e("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_shift_right_arithmetic-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_shift_right_arithmetic-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_shift_right_arithmetic")],-1)),t[144]||(t[144]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[146]||(t[146]=e("p",null,[e("code",null,"broadcast_shift_right_arithmetic")],-1)),t[147]||(t[147]=e("p",null,[l("Returns "),e("code",null,"lhs >> rhs"),l(" element-wise.")],-1)),t[148]||(t[148]=e("p",null,[l("See "),e("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[145]||(t[145]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L840-L847",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[145]})]),e("details",v,[e("summary",null,[t[149]||(t[149]=e("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_shift_right_logical-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_shift_right_logical-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_shift_right_logical")],-1)),t[150]||(t[150]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[152]||(t[152]=e("p",null,[e("code",null,"broadcast_shift_right_logical")],-1)),t[153]||(t[153]=e("p",null,[l("Returns "),e("code",null,"lhs >> rhs"),l(" element-wise.")],-1)),t[154]||(t[154]=e("p",null,[l("See "),e("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[151]||(t[151]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L876-L883",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[151]})]),e("details",S,[e("summary",null,[t[155]||(t[155]=e("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_subtract-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_subtract-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_subtract")],-1)),t[156]||(t[156]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[158]||(t[158]=e("p",null,[e("code",null,"broadcast_subtract")],-1)),t[159]||(t[159]=e("p",null,[l("Returns "),e("code",null,"lhs - rhs"),l(" element-wise.")],-1)),t[160]||(t[160]=e("p",null,[l("See "),e("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[157]||(t[157]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L912-L919",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[157]})]),e("details",$,[e("summary",null,[t[161]||(t[161]=e("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_xor-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_xor-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_xor")],-1)),t[162]||(t[162]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[164]||(t[164]=e("p",null,[e("code",null,"broadcast_xor")],-1)),t[165]||(t[165]=e("p",null,[l("Returns "),e("code",null,"logical_xor(lhs, rhs)"),l(" element-wise.")],-1)),t[166]||(t[166]=e("p",null,[l("See "),e("a",{href:"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations",target:"_blank",rel:"noreferrer"},"https://www.tensorflow.org/xla/operation_semantics#element-wise_binary_arithmetic_operations"),l(".")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[163]||(t[163]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L948-L955",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[163]})]),e("details",q,[e("summary",null,[t[167]||(t[167]=e("a",{id:"Reactant.MLIR.Dialects.chlo.broadcast_zeta-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.broadcast_zeta-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.broadcast_zeta")],-1)),t[168]||(t[168]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[170]||(t[170]=e("p",null,[e("code",null,"broadcast_zeta")],-1)),t[171]||(t[171]=e("p",null,[l("Returns "),e("code",null,"Zeta(operand, operand)"),l(" element-wise.")],-1)),t[172]||(t[172]=e("p",null,"$",-1)),t[173]||(t[173]=e("p",null,"(\\zeta(x, q) = \\sum_{n=0}^{\\infty} (q + n)^{-x}) $",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[169]||(t[169]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L984-L992",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[169]})]),e("details",P,[e("summary",null,[t[174]||(t[174]=e("a",{id:"Reactant.MLIR.Dialects.chlo.conj-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.conj-Tuple{Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.conj")],-1)),t[175]||(t[175]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[177]||(t[177]=e("p",null,[e("code",null,"conj")],-1)),t[178]||(t[178]=e("p",null,[l("Returns "),e("code",null,"Conj(operand)"),l(" element-wise.")],-1)),t[179]||(t[179]=e("p",null,"$",-1)),t[180]||(t[180]=e("p",null,"\\conj(x) = (\\real(x), \\neg(\\imag(x))) $",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[176]||(t[176]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L1021-L1029",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[176]})]),e("details",N,[e("summary",null,[t[181]||(t[181]=e("a",{id:"Reactant.MLIR.Dialects.chlo.constant-Tuple{}",href:"#Reactant.MLIR.Dialects.chlo.constant-Tuple{}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.constant")],-1)),t[182]||(t[182]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[184]||(t[184]=e("p",null,[e("code",null,"constant")],-1)),t[185]||(t[185]=e("p",null,"Represents a constant value.",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[183]||(t[183]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L1077-L1081",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[183]})]),e("details",B,[e("summary",null,[t[186]||(t[186]=e("a",{id:"Reactant.MLIR.Dialects.chlo.constant_like-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.constant_like-Tuple{Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.constant_like")],-1)),t[187]||(t[187]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[189]||(t[189]=e("p",null,[e("code",null,"constant_like")],-1)),t[190]||(t[190]=e("p",null,"Returns a splat constant of the same shape as the operand.",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[188]||(t[188]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L1050-L1054",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[188]})]),e("details",G,[e("summary",null,[t[191]||(t[191]=e("a",{id:"Reactant.MLIR.Dialects.chlo.cosh-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.cosh-Tuple{Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.cosh")],-1)),t[192]||(t[192]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[194]||(t[194]=e("p",null,[e("code",null,"cosh")],-1)),t[195]||(t[195]=e("p",null,[l("Returns "),e("code",null,"Cosh(operand)"),l(" element-wise.")],-1)),t[196]||(t[196]=e("p",null,"$",-1)),t[197]||(t[197]=e("p",null,"\\cosh(x) = (e^x + e^-x) / 2 $",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[193]||(t[193]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L1102-L1110",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[193]})]),e("details",F,[e("summary",null,[t[198]||(t[198]=e("a",{id:"Reactant.MLIR.Dialects.chlo.digamma-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.digamma-Tuple{Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.digamma")],-1)),t[199]||(t[199]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[201]||(t[201]=e("p",null,[e("code",null,"digamma")],-1)),t[202]||(t[202]=e("p",null,[l("Returns "),e("code",null,"Digamma(operand)"),l(" element-wise.")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[200]||(t[200]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L1131-L1135",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[200]})]),e("details",U,[e("summary",null,[t[203]||(t[203]=e("a",{id:"Reactant.MLIR.Dialects.chlo.erf-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.erf-Tuple{Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.erf")],-1)),t[204]||(t[204]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[206]||(t[206]=e("p",null,[e("code",null,"erf")],-1)),t[207]||(t[207]=e("p",null,[l("Computes the Gauss error function of "),e("code",null,"x"),l(" element-wise.")],-1)),t[208]||(t[208]=e("p",null,"erf(x) = erf_impl(x) if |x| < 1 = 1 - erfc_impl(x) otherwise",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[205]||(t[205]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L1185-L1192",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[205]})]),e("details",Z,[e("summary",null,[t[209]||(t[209]=e("a",{id:"Reactant.MLIR.Dialects.chlo.erf_inv-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.erf_inv-Tuple{Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.erf_inv")],-1)),t[210]||(t[210]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[212]||(t[212]=e("p",null,[e("code",null,"erf_inv")],-1)),t[213]||(t[213]=e("p",null,[l("Returns "),e("code",null,"ErfInv(operand)"),l(" element-wise.")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[211]||(t[211]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L1158-L1162",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[211]})]),e("details",J,[e("summary",null,[t[214]||(t[214]=e("a",{id:"Reactant.MLIR.Dialects.chlo.erfc-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.erfc-Tuple{Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.erfc")],-1)),t[215]||(t[215]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[217]||(t[217]=e("p",null,[e("code",null,"erfc")],-1)),t[218]||(t[218]=e("p",null,"Computes an approximation of the error function complement (1 - erf(x)).",-1)),t[219]||(t[219]=e("p",null,"erfc(x) = erfc_impl(x) if |x| > 1 = 1 - erf_impl(x) otherwise",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[216]||(t[216]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L1213-L1220",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[216]})]),e("details",K,[e("summary",null,[t[220]||(t[220]=e("a",{id:"Reactant.MLIR.Dialects.chlo.is_inf-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.is_inf-Tuple{Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.is_inf")],-1)),t[221]||(t[221]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[223]||(t[223]=e("p",null,[e("code",null,"is_inf")],-1)),t[224]||(t[224]=e("p",null,"Returns if a value is +/-inf element-wise.",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[222]||(t[222]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L1241-L1245",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[222]})]),e("details",Q,[e("summary",null,[t[225]||(t[225]=e("a",{id:"Reactant.MLIR.Dialects.chlo.is_neg_inf-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.is_neg_inf-Tuple{Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.is_neg_inf")],-1)),t[226]||(t[226]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[228]||(t[228]=e("p",null,[e("code",null,"is_neg_inf")],-1)),t[229]||(t[229]=e("p",null,"Returns if a value is -inf element-wise.",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[227]||(t[227]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L1266-L1270",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[227]})]),e("details",W,[e("summary",null,[t[230]||(t[230]=e("a",{id:"Reactant.MLIR.Dialects.chlo.is_pos_inf-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.is_pos_inf-Tuple{Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.is_pos_inf")],-1)),t[231]||(t[231]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[233]||(t[233]=e("p",null,[e("code",null,"is_pos_inf")],-1)),t[234]||(t[234]=e("p",null,"Returns if a value is +inf element-wise.",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[232]||(t[232]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L1293-L1297",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[232]})]),e("details",X,[e("summary",null,[t[235]||(t[235]=e("a",{id:"Reactant.MLIR.Dialects.chlo.lgamma-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.lgamma-Tuple{Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.lgamma")],-1)),t[236]||(t[236]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[238]||(t[238]=e("p",null,[e("code",null,"lgamma")],-1)),t[239]||(t[239]=e("p",null,[l("Returns "),e("code",null,"Lgamma(operand)"),l(" element-wise.")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[237]||(t[237]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L1320-L1324",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[237]})]),e("details",Y,[e("summary",null,[t[240]||(t[240]=e("a",{id:"Reactant.MLIR.Dialects.chlo.next_after-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.next_after-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.next_after")],-1)),t[241]||(t[241]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[243]||(t[243]=e("p",null,[e("code",null,"next_after")],-1)),t[244]||(t[244]=e("p",null,[l("Returns the next representable value of "),e("code",null,"x"),l(" in the direction of "),e("code",null,"y"),l(", element-wise. It can also return a subnormal number.")],-1)),t[245]||(t[245]=e("p",null,"Equivalent to the C++ std::nextafter function.",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[242]||(t[242]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L1345-L1352",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[242]})]),e("details",tt,[e("summary",null,[t[246]||(t[246]=e("a",{id:"Reactant.MLIR.Dialects.chlo.polygamma-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.polygamma-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.polygamma")],-1)),t[247]||(t[247]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[249]||(t[249]=e("p",null,[e("code",null,"polygamma")],-1)),t[250]||(t[250]=e("p",null,[l("Returns "),e("code",null,"Polygamma(operand, operand)"),l(" element-wise.")],-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[248]||(t[248]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L1375-L1379",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[248]})]),e("details",et,[e("summary",null,[t[251]||(t[251]=e("a",{id:"Reactant.MLIR.Dialects.chlo.ragged_dot-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.ragged_dot-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.ragged_dot")],-1)),t[252]||(t[252]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[254]||(t[254]=o("<p><code>ragged_dot</code></p><p>This operation takes three tensor argsâ€“-lhs, rhs, and group_sizesâ€“-and a &quot;ragged_dot_dimension_numbers&quot; attribute. Like dot_general, the lhs and rhs are allowed arbitrary batch and contracting dimensions. Additionally, the lhs is required to have one ragged dimension, and the rhs may have at most one group dimension. The op has three modes, depending on the kind of the lhs ragged dimension.</p><p>In mode 1, the shape-signature is <code>[b,m,k], [g,b,k,n], [b,g] -&gt; [b,m,n]</code>. Here the ragged dimension is an lhs non-contracting dimension (<code>m</code>). The dimensions <code>b</code> and <code>k</code> represent batch and contracting dimensions respectively. The rhs is required to have a group dimension (<code>g</code>).</p><p>In mode 2, the shape-signature is <code>[b,m,k], [b,k,n], [b,g] -&gt; [g,b,m,n]</code>. Here the ragged dimension is an lhs/rhs contracting dimension (<code>k</code>).</p><p>In mode 3, the shape-signature is <code>[b,m,k], [b,k,n], [g] -&gt; [b,m,n]</code>. Here the ragged dimension is an lhs/rhs batch dimension (<code>b</code>).</p>",5)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[253]||(t[253]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L1402-L1423",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[253]})]),e("details",lt,[e("summary",null,[t[255]||(t[255]=e("a",{id:"Reactant.MLIR.Dialects.chlo.sinh-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.sinh-Tuple{Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.sinh")],-1)),t[256]||(t[256]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[258]||(t[258]=e("p",null,[e("code",null,"sinh")],-1)),t[259]||(t[259]=e("p",null,[l("Returns "),e("code",null,"Sinh(operand)"),l(" element-wise.")],-1)),t[260]||(t[260]=e("p",null,"$",-1)),t[261]||(t[261]=e("p",null,"\\sinh(x) = (e^x - e^-x) / 2 if |x| < 1 = e^(x + log(1/2)) - e^(-x + log(1/2)) otherwise. $",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[257]||(t[257]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L1455-L1464",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[257]})]),e("details",at,[e("summary",null,[t[262]||(t[262]=e("a",{id:"Reactant.MLIR.Dialects.chlo.square-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.square-Tuple{Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.square")],-1)),t[263]||(t[263]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[265]||(t[265]=e("p",null,[e("code",null,"square")],-1)),t[266]||(t[266]=e("p",null,[l("Returns "),e("code",null,"Square(operand)"),l(" element-wise.")],-1)),t[267]||(t[267]=e("p",null,"$",-1)),t[268]||(t[268]=e("p",null,"\\square(x) = complex((x.real - x.imag) * (x.real + x.imag), x.real * x.imag * 2) if x is a complex number = x * x otherwise $",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[264]||(t[264]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L1485-L1494",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[264]})]),e("details",st,[e("summary",null,[t[269]||(t[269]=e("a",{id:"Reactant.MLIR.Dialects.chlo.tan-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.tan-Tuple{Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.tan")],-1)),t[270]||(t[270]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[272]||(t[272]=e("p",null,[e("code",null,"tan")],-1)),t[273]||(t[273]=e("p",null,[l("Returns "),e("code",null,"Tan(operand)"),l(" element-wise.")],-1)),t[274]||(t[274]=e("p",null,"$",-1)),t[275]||(t[275]=e("p",null,"\\tan(x) = \\sin(x) / \\cos(x) $",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[271]||(t[271]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L1515-L1523",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[271]})]),e("details",nt,[e("summary",null,[t[276]||(t[276]=e("a",{id:"Reactant.MLIR.Dialects.chlo.top_k-Tuple{Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.top_k-Tuple{Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.top_k")],-1)),t[277]||(t[277]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[279]||(t[279]=o('<p><code>top_k</code></p><p>If the input is a vector (rank-1), finds the <code>k</code> largest entries in the vector and outputs their values and indices as vectors. Thus <code>values[j]</code> is the <code>j</code>-th largest entry in <code>input</code>, and its index is <code>indices[j]</code>.</p><p>For matrices (resp. higher rank input), computes the top <code>k</code> entries in each row (resp. vector along the last dimension). Thus,</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>values.shape = indices.shape = input.shape[:-1] + [k]</span></span></code></pre></div><p>If two elements are equal, the lower-index element appears first.</p>',5)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[278]||(t[278]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L1544-L1559",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[278]})]),e("details",ot,[e("summary",null,[t[280]||(t[280]=e("a",{id:"Reactant.MLIR.Dialects.chlo.zeta-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}",href:"#Reactant.MLIR.Dialects.chlo.zeta-Tuple{Reactant.MLIR.IR.Value, Reactant.MLIR.IR.Value}"},[e("span",{class:"jlbinding"},"Reactant.MLIR.Dialects.chlo.zeta")],-1)),t[281]||(t[281]=l()),s(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),t[283]||(t[283]=e("p",null,[e("code",null,"zeta")],-1)),t[284]||(t[284]=e("p",null,[l("Returns "),e("code",null,"Zeta(operand, operand)"),l(" element-wise.")],-1)),t[285]||(t[285]=e("p",null,"$",-1)),t[286]||(t[286]=e("p",null,"(\\zeta(x, q) = \\sum_{n=0}^{\\infty} (q + n)^{-x}) $",-1)),s(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>t[282]||(t[282]=[e("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ecd2fa3ad3044262552df72b80f95b5ff1e8910/src/mlir/Dialects/CHLO.jl#L1587-L1595",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[282]})])])}const bt=r(R,[["render",rt]]);export{ft as __pageData,bt as default};
