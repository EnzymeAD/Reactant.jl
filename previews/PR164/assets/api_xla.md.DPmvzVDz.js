import{_ as s,C as i,c as n,o as c,j as t,a as l,a2 as r,G as o}from"./chunks/framework.C_VspMbV.js";const j=JSON.parse('{"title":"XLA","description":"","frontmatter":{},"headers":[],"relativePath":"api/xla.md","filePath":"api/xla.md","lastUpdated":null}'),p={name:"api/xla.md"},d={class:"jldocstring custom-block"},u={class:"jldocstring custom-block"};function b(m,e,_,f,A,y){const a=i("Badge");return c(),n("div",null,[e[9]||(e[9]=t("h1",{id:"xla",tabindex:"-1"},[l("XLA "),t("a",{class:"header-anchor",href:"#xla","aria-label":'Permalink to "XLA"'},"â€‹")],-1)),t("details",d,[t("summary",null,[e[0]||(e[0]=t("a",{id:"Reactant.XLA.AllocatorStats",href:"#Reactant.XLA.AllocatorStats"},[t("span",{class:"jlbinding"},"Reactant.XLA.AllocatorStats")],-1)),e[1]||(e[1]=l()),o(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[2]||(e[2]=r('<p>AllocatorStats()</p><p>Contains the following fields:</p><ul><li><p><code>num_allocs</code></p></li><li><p><code>bytes_in_use</code></p></li><li><p><code>peak_bytes_in_use</code></p></li><li><p><code>largest_alloc_size</code></p></li><li><p><code>bytes_limit</code></p></li><li><p><code>bytes_reserved</code></p></li><li><p><code>peak_bytes_reserved</code></p></li><li><p><code>bytes_reservable_limit</code></p></li><li><p><code>largest_free_block_bytes</code></p></li><li><p><code>pool_bytes</code></p></li><li><p><code>peak_pool_bytes</code></p></li></ul><p>It should be constructed using the <a href="/Reactant.jl/previews/PR164/api/xla#Reactant.XLA.allocatorstats"><code>allocatorstats</code></a> function.</p><p><a href="https://github.com/EnzymeAD/Reactant.jl/blob/3ce001c838adace3118304d55ce0e6c041f53554/src/XLA.jl#L343-L360" target="_blank" rel="noreferrer">source</a></p>',5))]),t("details",u,[t("summary",null,[e[3]||(e[3]=t("a",{id:"Reactant.XLA.allocatorstats",href:"#Reactant.XLA.allocatorstats"},[t("span",{class:"jlbinding"},"Reactant.XLA.allocatorstats")],-1)),e[4]||(e[4]=l()),o(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[5]||(e[5]=t("p",null,"allocatorstats([device])",-1)),e[6]||(e[6]=t("p",null,[l("Return an "),t("a",{href:"/Reactant.jl/previews/PR164/api/xla#Reactant.XLA.AllocatorStats"},[t("code",null,"AllocatorStats")]),l(" instance with information about the device specific allocator.")],-1)),e[7]||(e[7]=t("div",{class:"warning custom-block"},[t("p",{class:"custom-block-title"},"Warning"),t("p",null,"This method is currently not implemented for the CPU device.")],-1)),e[8]||(e[8]=t("p",null,[t("a",{href:"https://github.com/EnzymeAD/Reactant.jl/blob/3ce001c838adace3118304d55ce0e6c041f53554/src/XLA.jl#L375-L382",target:"_blank",rel:"noreferrer"},"source")],-1))])])}const L=s(p,[["render",b]]);export{j as __pageData,L as default};
